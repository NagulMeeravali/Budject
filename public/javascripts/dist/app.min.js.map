{"version":3,"sources":["main.js"],"names":["validateEmail","email","test","mobileMenuIcon","document","querySelector","addEventListener","e","preventDefault","classList","toggle","formInputs","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","formInput","value","this","add","remove","err","return","emailInputs","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","budgetDetails","forEach","detail","parent","parentElement","budgetSpentElement","budgetSpent","Number","textContent","replace","budgetGoal","budgetClass"],"mappings":"uJAEC,WAgCC,QAASA,GAAcC,GAErB,MADwB,0JACDC,KAAKD,GA9B9B,GAAME,GAAiBC,SAASC,cAAc,wBAErB,WACvBF,EAAeG,iBAAiB,QAAS,SAAUC,GACjDA,EAAEC,iBACFJ,SAASC,cAAc,QAAQI,UAAUC,OAAO,iBAQpD,IAAMC,MAAAA,OAAAA,mBAAiBP,SAASQ,iBAAiB,8CACjD,IAAID,EAAY,CAAA,GAAAE,IAAA,EAAAC,GAAA,EAAAC,MAAAC,EAAA,KACd,IAAA,GAAAC,GAAAC,EAAwBP,EAAxBQ,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAoC,CAAA,GAAzBU,GAAyBN,EAAAO,OADtB,SACHD,GACTA,EAAUjB,iBAAiB,SAAU,SAASC,GACxCgB,EAAUC,MACZC,KAAKhB,UAAUiB,IAAI,aAEnBD,KAAKhB,UAAUkB,OAAO,gBALjBJ,IADG,MAAAK,GAAAd,GAAA,EAAAC,EAAAa,EAAA,QAAA,KAAAf,GAAAK,EAAAW,QAAAX,EAAAW,SAAA,QAAA,GAAAf,EAAA,KAAAC,KAkBhB,GAAMe,MAAAA,OAAAA,mBAAkB1B,SAASQ,iBAAiB,uBApCvCmB,GAAA,EAAAC,GAAA,EAAAC,MAAAjB,EAAA,KAqCX,IAAA,GAAAkB,GAAAC,EAAyBL,EAAzBX,OAAAC,cAAAW,GAAAG,EAAAC,EAAAd,QAAAC,MAAAS,GAAA,EAAsC,CAAAG,EAAAV,MACzBlB,iBAAiB,UAAW,SAASC,GAC1CP,EAAcyB,KAAKD,OACrBC,KAAKhB,UAAUkB,OAAO,iBAEtBF,KAAKhB,UAAUiB,IAAI,oBA1Cd,MAAAE,GAAAI,GAAA,EAAAC,EAAAL,EAAA,QAAA,KAAAG,GAAAI,EAAAN,QAAAM,EAAAN,SAAA,QAAA,GAAAG,EAAA,KAAAC,KAiDX,cACQG,OAAAA,mBAAoBhC,SAASQ,iBAAiB,kBAEtCyB,QAAQ,SAAAC,GACpB,GAAMC,GAASD,EAAOE,cAAcA,cAC9BC,EAAqBH,EAAOjC,cAAc,iBAC1CqC,EAAcC,OAAOF,EAAmBG,YAAYC,QAAQ,cAAe,KAC3EC,EAAaH,OAAOL,EAAOjC,cAAc,gBAAgBuC,YAAYC,QAAQ,cAAe,KAC5FE,EAAcL,EAAcI,EAAa,YAAc,YAE7DL,GAAmBhC,UAAUiB,IAAIqB,GACjCR,EAAO9B,UAAUiB,IAAIqB","file":"app.min.js","sourcesContent":["/*jslint browser:true */\n\n(function () {\n  'use strict';\n\n  // Mobile Menu Toggle Functionality\n  const mobileMenuIcon = document.querySelector('.mobile-menu-toggle');\n\n  const mobileMenuToggle = function () {\n    mobileMenuIcon.addEventListener('click', function (e) {\n      e.preventDefault();\n      document.querySelector('body').classList.toggle('menu-open');\n    });\n  };\n\n  mobileMenuToggle();\n\n  // Add class to form input if input has value\n\n  const formInputs = [...document.querySelectorAll('input:not([type=submit]):not([type=date])')];\n  if (formInputs) {\n    for (const formInput of formInputs) {\n      formInput.addEventListener('change', function(e) {\n        if (formInput.value) {\n          this.classList.add('has-value');\n        } else {\n          this.classList.remove('has-value');\n        }\n      })\n    }\n  }\n\n  // Add validation to email input as you type\n\n  function validateEmail(email) {\n    const emailValidation = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return emailValidation.test(email);\n  }\n  const emailInputs = [...document.querySelectorAll('input[type=email]')];\n  for (const emailInput of emailInputs) {\n    emailInput.addEventListener('keydown', function(e) {\n      if (validateEmail(this.value)) {\n        this.classList.remove('invalid-input');\n      } else {\n        this.classList.add('invalid-input');\n      }\n    });\n  }\n\n  // Change color of budget spent number depending on if it exceeds or is lower than budget goal number\n\n  function changeBudgetColor() {\n    const budgetDetails = [...document.querySelectorAll('.budget-meta')];\n\n    budgetDetails.forEach(detail => {\n      const parent = detail.parentElement.parentElement;\n      const budgetSpentElement = detail.querySelector('.budget-spent');\n      const budgetSpent = Number(budgetSpentElement.textContent.replace(/[^0-9\\.-]+/g, \"\"));\n      const budgetGoal = Number(detail.querySelector('.budget-goal').textContent.replace(/[^0-9\\.-]+/g, \"\"));\n      const budgetClass = budgetSpent > budgetGoal ? 'overspend' : 'underspend';\n\n      budgetSpentElement.classList.add(budgetClass);\n      parent.classList.add(budgetClass);\n    });\n  }\n  \n  changeBudgetColor();\n\n  // const svg = d3.select(\"svg.line-chart\"),\n  // margin = {top: 20, right: 20, bottom: 30, left: 50},\n  // width = +svg.attr(\"width\") - margin.left - margin.right,\n  // height = +svg.attr(\"height\") - margin.top - margin.bottom,\n  // g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  // var parseTime = d3.timeParse(\"%d-%b-%y\");\n\n  // var x = d3.scaleTime()\n  //     .rangeRound([0, width]);\n\n  // var y = d3.scaleLinear()\n  //     .rangeRound([height, 0]);\n\n  // var line = d3.line()\n  //     .x(function(d) { return x(d.date); })\n  //     .y(function(d) { return y(d.close); });\n}());\n"]}