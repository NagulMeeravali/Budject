{"version":3,"sources":["charts.js","main.js"],"names":["loadItems","category","year","arguments","length","undefined","moment","startOf","format","axios","get","then","res","data","console","log","labels","Object","keys","values","ctx","document","getElementById","Chart","type","datasets","label","backgroundColor","borderColor","borderWidth","options","title","display","text","charAt","toUpperCase","slice","scales","yAxes","ticks","beginAtZero","callback","value","index","updateQueryStringParameter","uri","key","re","RegExp","separator","indexOf","match","replace","validateEmail","email","test","addAmountInputClass","this","parentElement","classList","add","removeAmountInputClass","remove","dashboardCategoryFilter","querySelector","addEventListener","e","window","location","href","mobileMenuIcon","preventDefault","toggle","formInputs","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","formInput","err","return","emailInputs","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","passwordInput","confirmPasswordInput","amountInput","budgetDetails","forEach","detail","parent","budgetSpentElement","budgetSpent","Number","textContent","budgetGoal","budgetClass"],"mappings":"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","file":"app.min.js","sourcesContent":["function loadItems(category, year = moment().startOf('year').format('YYYY')) {\n  axios.get(`/api/category/${category}?year=${year}`)\n    .then(res => {\n      const data = res.data;\n      console.log(`year: ${2017}`)\n      console.log(data['sumByMonth'][year])\n      const labels = Object.keys(data['sumByMonth'][year]);\n      const values = Object.values(data['sumByMonth'][year])\n\n      const ctx = document.getElementById(\"myChart\");\n\n      const myChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels,\n          datasets: [{\n            label: 'Amount Spent Per Month',\n            data: values,\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.2)',\n              'rgba(54, 162, 235, 0.2)',\n              'rgba(255, 206, 86, 0.2)',\n              'rgba(75, 192, 192, 0.2)',\n              'rgba(153, 102, 255, 0.2)',\n              'rgba(255, 159, 64, 0.2)'\n            ],\n            borderColor: [\n              'rgba(255,99,132,1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          title: {\n            display: true,\n            text: `${category.charAt(0).toUpperCase() + category.slice(1)} Spending for ${year}`\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                callback: function(value, index, values) {\n                    return '$' + value;\n                }\n              }\n            }]\n          }\n        }\n      });\n    })\n  }\n\n  \n","/*jslint browser:true */\n\n(function () {\n  'use strict';\n\n  function updateQueryStringParameter(uri, key, value) {\n    var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n    var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\n    if (uri.match(re)) {\n      return uri.replace(re, '$1' + key + \"=\" + value + '$2');\n    }\n    else {\n      return uri + separator + key + \"=\" + value;\n    }\n  }\n\n  const dashboardCategoryFilter = document.querySelector('select[name=category-type-filter]');\n  if (dashboardCategoryFilter) {\n    dashboardCategoryFilter.addEventListener('change', function(e) {\n      const sort = 'sort';\n      const value = this.value;\n      window.location.href = updateQueryStringParameter(window.location.href, sort, value);\n    });\n  }\n  \n  // Mobile Menu Toggle Functionality\n  const mobileMenuIcon = document.querySelector('.mobile-menu-toggle');\n\n  const mobileMenuToggle = function () {\n    mobileMenuIcon.addEventListener('click', function (e) {\n      e.preventDefault();\n      document.querySelector('body').classList.toggle('menu-open');\n    });\n  };\n\n  mobileMenuToggle();\n\n  // Add class to form input if input has value\n\n  const formInputs = [...document.querySelectorAll('input:not([type=submit]):not([type=date]), select, textarea')];\n  if (formInputs) {\n    for (const formInput of formInputs) {\n      if (formInput.value) {\n        formInput.classList.add('has-value');\n      }\n      \n      formInput.addEventListener('change', function(e) {\n        if (formInput.value) {\n          this.classList.add('has-value');\n        } else {\n          this.classList.remove('has-value');\n        }\n      })\n    }\n  }\n\n  // Add validation to email input as you type\n\n  function validateEmail(email) {\n    const emailValidation = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return emailValidation.test(email);\n  }\n\n  const emailInputs = [...document.querySelectorAll('input[type=email]')];\n  for (const emailInput of emailInputs) {\n    emailInput.addEventListener('keydown', function(e) {\n      if (validateEmail(this.value)) {\n        this.classList.remove('invalid-input');\n      } else {\n        this.classList.add('invalid-input');\n      }\n    });\n  }\n\n  // Add validation to password and confirm password fields as you type\n\n  const passwordInput = document.querySelector('input[name=password]');\n  const confirmPasswordInput = document.querySelector('input[name=confirm-password]');\n\n  if (passwordInput && confirmPasswordInput) {\n    confirmPasswordInput.addEventListener('keyup', function(e) {\n      if (this.value !== passwordInput.value) {\n        this.classList.add('invalid-input');\n      } else {\n        this.classList.remove('invalid-input');\n        this.classList.add('passwords-match');\n        passwordInput.classList.add('passwords-match');\n      }\n    });\n  }\n\n  // Add class to parent container when amount field is in focus\n  const amountInput = document.querySelector('.amount-field input');\n\n  function addAmountInputClass() {\n    this.parentElement.classList.add('active-element');\n  }\n\n  function removeAmountInputClass() {\n    if (this.value) {\n      return;\n    }\n    \n    this.parentElement.classList.remove('active-element');\n  }\n\n  if (amountInput) {\n    amountInput.addEventListener('focus', addAmountInputClass, true);\n    amountInput.addEventListener('blur', addAmountInputClass, true);\n    amountInput.addEventListener('focusout', removeAmountInputClass, true)\n  }\n\n  // Change color of budget spent number depending on if it exceeds or is lower than budget goal number\n\n  function changeBudgetColor() {\n    const budgetDetails = [...document.querySelectorAll('.budget-meta')];\n\n    if (budgetDetails) {\n      budgetDetails.forEach(detail => {\n        const parent = detail.parentElement.parentElement;\n        const budgetSpentElement = detail.querySelector('.budget-spent');\n        const budgetSpent = Number(budgetSpentElement.textContent.replace(/[^0-9\\.-]+/g, \"\"));\n        const budgetGoal = Number(detail.querySelector('.budget-goal').textContent.replace(/[^0-9\\.-]+/g, \"\"));\n        const budgetClass = budgetSpent > budgetGoal ? 'overspend' : 'underspend';\n\n        budgetSpentElement.classList.add(budgetClass);\n        parent.classList.add(budgetClass);\n      });\n    }\n  }\n  \n  changeBudgetColor();\n\n}());\n"]}