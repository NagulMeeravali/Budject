{"version":3,"sources":["category-chart.js","category-pie-chart.js","dashboard-chart.js","main.js"],"names":["yearGraphs","category","year","arguments","length","undefined","moment","startOf","format","axios","get","then","res","data","valuesObj","Object","values","labelsObj","keys","labels","map","label","sum","value","valueItems","items","arr","forEach","item","push","amount","budgeted","toFixed","ctx","document","getElementById","axisValue","Number","Math","ceil","backgroundColor","barData","datasets","borderColor","borderWidth","fill","lineData","pointBackgroundColor","pointBorderColor","options","title","display","fontSize","text","charAt","toUpperCase","slice","legend","boxWidth","scales","xAxes","stacked","ticks","callback","tick","yAxes","beginAtZero","max","type","index","tooltips","enabled","mode","displayColors","titleFontFamily","titleFontSize","titleFontColor","titleMarginBottom","bodyFontFamily","bodyFontSize","bodyFontColor","bodySpacing","callbacks","tooltipItem","this","_data","tooltipItems","yLabel","hover","onHover","e","style","cursor","categoryChart","Chart","chartBtns","querySelectorAll","chartBtnVal","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","addEventListener","destroy","err","return","onclick","evt","activePoints","getElementsAtEvent","firstPoint","_index","_datasetIndex","window","location","href","split","generateRandomColor","hash","i","floor","random","monthGraphs","catMonth","querySelector","textContent","catYear","queriedSum","month","queriedMonthData","pieArr","labelArr","color","itemSum","reduce","unspent","pieData","padding","percent","datasetIndex","cost","percentStatement","Array","loadAllItems","responsive","preventDefault","updateQueryStringParameter","uri","key","re","RegExp","separator","indexOf","match","replace","validateEmail","email","test","addAmountInputClass","parentElement","classList","add","removeAmountInputClass","remove","dashboardCategoryFilter","mobileMenuIcon","toggle","formInputs","formInput","emailInputs","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","passwordInput","confirmPasswordInput","amountInput","contains","fileLabel","fileUpload","receiptImg","clearBtn","changeLabelVal","input","innerHTML","splitLabel","clearUpload","budgetDetails","detail","parent","budgetSpentElement","budgetSpent","budgetGoal","budgetClass","flashes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","flash","element","op","timer","setTimeout","setInterval","clearInterval","opacity","filter"],"mappings":"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","file":"app.min.js","sourcesContent":["function yearGraphs(category, year = moment().startOf('year').format('YYYY')) {\n  axios.get(`/api/category/${category}/items?year=${year}`)\n    .then(res => {\n      const data = res.data;\n      const valuesObj = Object.values(data['sumByMonth'][year]);\n      const labelsObj = Object.keys(data['sumByMonth'][year]);\n      const labels = labelsObj.map((label) => {return label});\n      const items = valuesObj.map((value) => {\n        const valueItems = value.items;\n        const arr = [];\n        valueItems.forEach((item) => {\n          arr.push(item.amount);\n        });\n        return arr;\n      });\n\n      const sum = valuesObj.map((value) => {return value.sum});\n      const budgeted = (data['sumByMonth']['budgeted'].toFixed(2));\n      const label = `Amount Spent Per Month — Budget: $${budgeted}`;\n      const ctx = document.getElementById(\"categoryChart\");\n\n      let axisValue = \"\";\n      if (Number(sum) > Number(budgeted)) {\n        axisValue = Math.ceil((Number(sum) + (Number(sum) * .2) + 1) / 10) * 10;\n      } else {\n        axisValue = Math.ceil(Number(budgeted) / 10) * 10;\n      }\n\n      const backgroundColor = [];\n\n      sum.map((value) => {\n        if (value <= budgeted) {\n          backgroundColor.push('#17B890');\n        } else {\n          backgroundColor.push('#DB504A')\n        }\n      });\n\n      const barData = {\n        labels,\n        datasets: [{\n          label,\n          data: sum,\n          backgroundColor,\n          borderColor: backgroundColor,\n          borderWidth: 1,\n          fill: false\n        }]\n      }\n\n      const lineData = {\n        labels,\n        datasets: [{\n          label,\n          data: sum,\n          borderColor: '#748386',\n          pointBackgroundColor: backgroundColor,\n          pointBorderColor: backgroundColor,\n          borderWidth: 2,\n          fill: false\n        }]\n      }\n\n      const options = {\n        title: {\n          display: true,\n          fontSize: 18,\n          text: `${category.charAt(0).toUpperCase() + category.slice(1)} Spending for ${year}`\n        },\n        legend: {\n          labels: {\n            boxWidth: 0,\n          }\n        },\n        scales: {\n          xAxes: [{\n            stacked: true,\n            ticks: {\n              callback: function(tick) {\n                return moment(tick, 'MM').format('MMM');\n              }\n            }\n          }],\n          yAxes: [{\n            stacked: true,\n            ticks: {\n              beginAtZero: true,\n              max: axisValue,\n              type: 'linear',\n              callback: function(value, index, values) {\n                  return '$' + value;\n              }\n            }\n          }]\n        },\n        tooltips: {\n            enabled: true,\n            mode: 'single',\n            displayColors: false,\n            backgroundColor: '#FAFFFD',\n            titleFontFamily: \"'Lora', serif\",\n            titleFontSize: 16,\n            titleFontColor: '#252323',\n            titleMarginBottom: 8,\n            bodyFontFamily: \"'Lora', serif\",\n            bodyFontSize: 12,\n            bodyFontColor: '#252323',\n            bodySpacing: 10,\n            callbacks: {\n                title: function(tooltipItem) { \n                  return moment(this._data.labels[tooltipItem[0].index], 'MM').format('MMMM');\n                },\n                label: function(tooltipItems, data) { \n                  return `$${(tooltipItems.yLabel.toFixed(2))}`;\n                }\n            }\n        },\n        hover: {\n          onHover: function(e) {\n            ctx.style.cursor = e[0] ? \"pointer\" : \"default\";\n          }\n        }\n      }\n\n      let categoryChart = new Chart(ctx, {\n        type: 'bar',\n        data: barData,\n        options\n      });\n\n      const chartBtns = [...document.querySelectorAll('button.chartBtn')];\n      let chartBtnVal = 'bar';\n      if (chartBtns) {\n        for (const chartBtn of chartBtns) {\n          chartBtn.addEventListener('click', function(e) {\n            chartBtnVal = this.value;\n            categoryChart.destroy();\n            if (chartBtnVal === 'line') {\n              categoryChart = new Chart(ctx, {\n                type: 'line',\n                data: lineData,\n                options\n              });\n            } else if (chartBtnVal === 'bar') {\n              categoryChart = new Chart(ctx, {\n                type: 'bar',\n                data: barData,\n                options\n              });\n            }\n          });\n        }\n      }\n\n      ctx.onclick = function(evt){\n        const activePoints = categoryChart.getElementsAtEvent(evt);\n        const firstPoint = activePoints[0];\n        const label = categoryChart.data.labels[firstPoint._index];\n        const value = categoryChart.data.datasets[firstPoint._datasetIndex].data[firstPoint._index];\n        if (firstPoint !== undefined)\n          window.location.href = `${window.location.href.split('?')[0]}?month=${label}&year=${year}`\n      };\n    })\n  }\n\n","function generateRandomColor() {\n  const digits = '0123456789ABCDEF';\n  let hash = '#';\n  for (let i = 0; i < 6; i++) {\n    hash += digits[Math.floor(Math.random() * 16)];\n  }\n  return hash;\n}\n\nfunction monthGraphs(category, year = moment().startOf('year').format('YYYY')) {\naxios.get(`/api/category/${category}/items?year=${year}`)\n  .then(res => {\n    const data = res.data;\n    const valuesObj = Object.values(data['sumByMonth'][year]);\n\n    const catMonth = document.querySelector('.datepicker .month').textContent;\n    const catYear = document.querySelector('.datepicker .year').textContent;\n    const budgeted = (data['sumByMonth']['budgeted'].toFixed(2));\n    const queriedSum = data['sumByMonth'][moment().year(catYear).format(\"YYYY\")][moment().month(catMonth).format(\"M\")].sum;\n    const queriedMonthData = data['sumByMonth'][moment().year(catYear).format(\"YYYY\")][moment().month(catMonth).format(\"M\")].items;\n    const pieArr = [];\n    queriedMonthData.map((item) => {\n      pieArr.push(item.amount);\n    })\n\n    const labelArr = [];\n    queriedMonthData.map((item) => {\n      labelArr.push(item.title);\n    })\n\n    const ctx = document.getElementById(\"categoryPieChart\");\n\n    const backgroundColor = [];\n    for (let i = 0; i < labelArr.length; i++) {\n      const color = generateRandomColor();\n      backgroundColor.push(color);\n    }\n\n    // If budget hasn't been exceeded, add in remaining section to pie chart\n    const itemSum = pieArr.reduce((sum, value) => sum + value);\n    const unspent = budgeted - itemSum;\n\n    if (unspent > 0) {\n      pieArr.push(unspent)\n      labelArr.push('Remaining in Budget')\n      backgroundColor.push('#748386');\n    }\n\n    const pieData = {\n      labels: labelArr,\n      datasets: [{\n        data: pieArr,\n        borderColor: '#748386',\n        backgroundColor,\n        borderWidth: 1,\n        fill: false\n      }]\n    }\n\n    const options = {\n      title: {\n        display: true,\n        padding: 20,\n        fontSize: 22,\n        text: `${category.charAt(0).toUpperCase() + category.slice(1)} Spending for ${catMonth}${year}`\n      },\n      legend: {\n        display: false,\n        labels: {\n          boxWidth: 0,\n        }\n      },\n      tooltips: {\n        enabled: true,\n        mode: 'single',\n        displayColors: false,\n        backgroundColor: '#FAFFFD',\n        titleFontFamily: \"'Lora', serif\",\n        titleFontSize: 16,\n        titleFontColor: '#252323',\n        titleMarginBottom: 10,\n        bodyFontFamily: \"'Lora', serif\",\n        bodyFontSize: 12,\n        bodyFontColor: '#252323',\n        bodySpacing: 10,\n        callbacks: {\n          title: function(tooltipItem) { \n            return this._data.labels[tooltipItem[0].index];\n          },\n          label: function(tooltipItems, data) {\n            const percent = ((Number(data.datasets[tooltipItems.datasetIndex].data[tooltipItems.index]) / queriedSum) * 100).toFixed(2);\n            const cost = `$${(data.datasets[tooltipItems.datasetIndex].data[tooltipItems.index]).toFixed(2)}`;\n            const percentStatement = `${percent}% of total spending`;\n            const tooltip = new Array(cost, percentStatement);\n            return tooltip;\n          },\n        }\n      },\n      hover: {\n        onHover: function(e) {\n          ctx.style.cursor = e[0] ? \"pointer\" : \"default\";\n        }\n      }\n    }\n\n    let categoryChart = new Chart(ctx, {\n      type: 'pie',\n      data: pieData,\n      options\n    });\n  })\n}\n\n","function loadAllItems(year = moment().startOf('year').format('YYYY')) {\naxios.get(`/api/categories/items?year=${year}`)\n  .then(res => {\n    const data = res.data;\n    const labels = Object.keys(data['sumByMonth'][year]);\n    const values = Object.values(data['sumByMonth'][year]);\n    const budgeted = (data['sumByMonth']['totalBudget']).toFixed(2);\n    const ctx = document.getElementById(\"dashboardChart\");\n    const label = `Total Monthly Budget: $${budgeted}`;\n\n    let axisValue = \"\";\n    if (Number(values) > Number(budgeted)) {\n      axisValue = Math.ceil((Number(values) + (Number(values) * .2) + 1) / 10) * 10;\n    } else {\n      axisValue = Math.ceil(Number(budgeted) / 10) * 10;\n    }\n\n    const backgroundColor = [];\n\n    values.map((value) => {\n      if (value <= budgeted) {\n        backgroundColor.push('#17B890');\n      } else {\n        backgroundColor.push('#DB504A')\n      }\n    });\n\n    const barData = {\n      labels,\n      datasets: [{\n        label,\n        data: values,\n        backgroundColor,\n        borderColor: backgroundColor,\n        borderWidth: 1,\n        fill: false\n      }]\n    }\n\n    const lineData = {\n      labels,\n      datasets: [{\n        label,\n        data: values,\n        borderColor: '#748386',\n        pointBackgroundColor: backgroundColor,\n        pointBorderColor: backgroundColor,\n        borderWidth: 2,\n        fill: false\n      }]\n    }\n\n    const options = {\n      responsive: true,\n      title: {\n        display: true,\n        fontSize: 18,\n        text: `Spending for ${year}`\n      },\n      legend: {\n        labels: {\n          boxWidth: 0,\n        }\n      },\n      scales: {\n        xAxes: [{\n          ticks: {\n            callback: function(tick) {\n              return moment(tick, 'MM').format('MMM');\n            }\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            max: axisValue,\n            callback: function(value, index, values) {\n                return '$' + value;\n            }\n          }\n        }]\n      },\n      tooltips: {\n          enabled: true,\n          mode: 'single',\n          displayColors: false,\n          backgroundColor: '#FAFFFD',\n          titleFontFamily: \"'Lora', serif\",\n          titleFontSize: 16,\n          titleFontColor: '#252323',\n          titleMarginBottom: 8,\n          bodyFontFamily: \"'Lora', serif\",\n          bodyFontSize: 12,\n          bodyFontColor: '#252323',\n          bodySpacing: 10,\n          callbacks: {\n              title: function(tooltipItem) { \n                return moment(this._data.labels[tooltipItem[0].index], 'MM').format('MMMM');\n              },\n              label: function(tooltipItems, data) { \n                return `$${(tooltipItems.yLabel.toFixed(2))}`;\n              }\n          }\n      },\n      hover: {\n        onHover: function(e) {\n          ctx.style.cursor = e[0] ? \"pointer\" : \"default\";\n        }\n      }\n    }\n\n    let categoryChart = new Chart(ctx, {\n      type: 'bar',\n      data: barData,\n      options\n    });\n\n    const chartBtns = [...document.querySelectorAll('button.chartBtn')];\n    let chartBtnVal = 'bar';\n    if (chartBtns) {\n      for (const chartBtn of chartBtns) {\n        chartBtn.addEventListener('click', function(e) {\n          e.preventDefault();\n          chartBtnVal = this.value;\n          categoryChart.destroy();\n          if (chartBtnVal === 'line') {\n            categoryChart = new Chart(ctx, {\n              type: 'line',\n              data: lineData,\n              options\n            });\n          } else {\n            categoryChart = new Chart(ctx, {\n              type: 'bar',\n              data: barData,\n              options\n            });\n          }\n        });\n      }\n    }\n\n    ctx.onclick = function(evt){\n      const activePoints = categoryChart.getElementsAtEvent(evt);\n      const firstPoint = activePoints[0];\n      const label = categoryChart.data.labels[firstPoint._index];\n      const value = categoryChart.data.datasets[firstPoint._datasetIndex].data[firstPoint._index];\n      if (firstPoint !== undefined)\n        window.location.href = `${window.location.href.split('?')[0]}?month=${label}&year=${year}`\n    };\n  })\n}\n\n","/*jslint browser:true */\n\n(function () {\n  'use strict';\n\n  function updateQueryStringParameter(uri, key, value) {\n    var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n    var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\n    if (uri.match(re)) {\n      return uri.replace(re, '$1' + key + \"=\" + value + '$2');\n    }\n    else {\n      return uri + separator + key + \"=\" + value;\n    }\n  }\n\n  const dashboardCategoryFilter = document.querySelector('select[name=category-type-filter]');\n  if (dashboardCategoryFilter) {\n    dashboardCategoryFilter.addEventListener('change', function(e) {\n      const sort = 'sort';\n      const value = this.value;\n      window.location.href = updateQueryStringParameter(window.location.href, sort, value);\n    });\n  }\n  \n  // Mobile Menu Toggle Functionality\n  const mobileMenuIcon = document.querySelector('.mobile-menu-toggle');\n\n  const mobileMenuToggle = function () {\n    mobileMenuIcon.addEventListener('click', function (e) {\n      e.preventDefault();\n      document.querySelector('body').classList.toggle('menu-open');\n    });\n  };\n\n  mobileMenuToggle();\n\n  // Add class to form input if input has value\n\n  const formInputs = [...document.querySelectorAll('input:not([type=submit]):not([type=date]), select, textarea')];\n  if (formInputs) {\n    for (const formInput of formInputs) {\n      if (formInput.value) {\n        formInput.classList.add('has-value');\n      }\n      \n      formInput.addEventListener('change', function(e) {\n        if (formInput.value) {\n          this.classList.add('has-value');\n        } else {\n          this.classList.remove('has-value');\n        }\n      })\n    }\n  }\n\n  // Add validation to email input as you type\n\n  function validateEmail(email) {\n    const emailValidation = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return emailValidation.test(email);\n  }\n\n  const emailInputs = [...document.querySelectorAll('input[type=email]')];\n  for (const emailInput of emailInputs) {\n    emailInput.addEventListener('keydown', function(e) {\n      if (validateEmail(this.value)) {\n        this.classList.remove('invalid-input');\n      } else {\n        this.classList.add('invalid-input');\n      }\n    });\n  }\n\n  // Add validation to password and confirm password fields as you type\n\n  const passwordInput = document.querySelector('input[name=password]');\n  const confirmPasswordInput = document.querySelector('input[name=confirm-password]');\n\n  if (passwordInput && confirmPasswordInput) {\n    confirmPasswordInput.addEventListener('keyup', function(e) {\n      if (this.value !== passwordInput.value) {\n        this.classList.add('invalid-input');\n      } else {\n        this.classList.remove('invalid-input');\n        this.classList.add('passwords-match');\n        passwordInput.classList.add('passwords-match');\n      }\n    });\n  }\n\n  // Add class to parent container when amount field is in focus\n  const amountInput = document.querySelector('.amount-field input');\n\n  function addAmountInputClass() {\n    this.parentElement.classList.add('active-element');\n  }\n\n  function removeAmountInputClass() {\n    if (this.value) {\n      return;\n    }\n    \n    this.parentElement.classList.remove('active-element');\n  }\n\n  if (amountInput) {\n    if (amountInput.classList.contains('has-value')) {\n      amountInput.parentElement.classList.add('active-element');\n    }\n    amountInput.addEventListener('focus', addAmountInputClass, true);\n    amountInput.addEventListener('blur', addAmountInputClass, true);\n    amountInput.addEventListener('focusout', removeAmountInputClass, true)\n  }\n\n  // File upload label update\n  const fileLabel = document.querySelector('.file-field .labelText');\n  const fileUpload = document.querySelector('.js-fileUpload');\n  const receiptImg = document.querySelector('.receipt-img')\n  const clearBtn = document.querySelector('.clear-upload');\n\n  const changeLabelVal = function(input, label) {\n    if (input.value == \"\") {\n      label.innerHTML = \"No File Uploaded\";\n    } else {\n      const splitLabel = input.value.split('\\\\');\n      label.innerHTML = splitLabel[splitLabel.length - 1];\n    }\n  };\n\n  const clearUpload = function() {\n    fileUpload.value = \"\";\n    fileLabel.textContent = \"No Image Uploaded\";\n    this.style.display = \"none\";\n    receiptImg.style.display = \"none\";\n  }\n\n  if (fileUpload) {\n    fileUpload.addEventListener('change', () => {\n      changeLabelVal(fileUpload, fileLabel);\n    });\n\n    fileUpload.addEventListener('change', () => {\n      if (fileUpload.value) {\n        clearBtn.style.display = \"block\";\n      }\n    });\n\n    clearBtn.addEventListener('click', clearUpload);\n  }\n\n  // Change color of budget spent number depending on if it exceeds or is lower than budget goal number\n\n  function changeBudgetColor() {\n    const budgetDetails = [...document.querySelectorAll('.budget-meta')];\n\n    if (budgetDetails) {\n      budgetDetails.forEach(detail => {\n        const parent = detail.parentElement.parentElement;\n        const budgetSpentElement = detail.querySelector('.budget-spent');\n        if (budgetSpentElement) {\n          const budgetSpent = Number(budgetSpentElement.textContent.replace(/[^0-9\\.-]+/g, \"\"));\n          const budgetGoal = Number(detail.querySelector('.budget-goal').textContent.replace(/[^0-9\\.-]+/g, \"\"));\n          const budgetClass = budgetSpent > budgetGoal ? 'overspend' : 'underspend';\n          budgetSpentElement.classList.add(budgetClass);\n          parent.classList.add(budgetClass);\n        }\n      });\n    }\n  }\n  \n  changeBudgetColor();\n\n  // Fade out flash after 5 seconds\n  function fade(element) {\n      let op = 1;  // initial opacity\n      const timer = setTimeout(function() {\n        setInterval(function () {\n          if (op <= 0.3){\n              clearInterval(timer);\n              element.style.display = 'none';\n          }\n          element.style.opacity = op;\n          element.style.filter = 'alpha(opacity=' + op * 100 + \")\";\n          op -= op * 0.1;\n      }, 300)\n    }, 3000);\n  }\n\n  const flashes = document.querySelectorAll('.flash');\n  for (const flash of flashes) {\n    fade(flash);\n  }\n\n}());\n"]}