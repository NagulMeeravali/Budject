{"version":3,"sources":["category-chart.js","dashboard-chart.js","main.js"],"names":["loadItems","category","year","arguments","length","undefined","moment","startOf","format","axios","get","then","res","data","valuesObj","Object","values","labelsObj","keys","labels","map","label","sum","value","valueItems","items","arr","forEach","item","push","amount","budgeted","toFixed","ctx","document","getElementById","backgroundColor","barData","datasets","borderColor","borderWidth","fill","lineData","pointBackgroundColor","pointBorderColor","options","title","display","fontSize","text","charAt","toUpperCase","slice","legend","boxWidth","scales","xAxes","stacked","ticks","callback","tick","yAxes","beginAtZero","type","min","max","stepSize","index","tooltips","enabled","mode","displayColors","callbacks","tooltipItem","this","_data","tooltipItems","yLabel","hover","onHover","e","style","cursor","categoryChart","Chart","chartBtns","querySelectorAll","chartBtnVal","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","addEventListener","destroy","err","return","onclick","evt","activePoints","getElementsAtEvent","firstPoint","_index","_datasetIndex","window","location","href","split","loadAllItems","responsive","preventDefault","updateQueryStringParameter","uri","key","re","RegExp","separator","indexOf","match","replace","validateEmail","email","test","addAmountInputClass","parentElement","classList","add","removeAmountInputClass","remove","dashboardCategoryFilter","querySelector","mobileMenuIcon","toggle","formInputs","formInput","emailInputs","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","passwordInput","confirmPasswordInput","amountInput","contains","budgetDetails","detail","parent","budgetSpentElement","budgetSpent","Number","textContent","budgetGoal","budgetClass"],"mappings":"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","file":"app.min.js","sourcesContent":["function loadItems(category, year = moment().startOf('year').format('YYYY')) {\n  axios.get(`/api/category/${category}/items?year=${year}`)\n    .then(res => {\n      const data = res.data;\n      const valuesObj = Object.values(data['sumByMonth'][year]);\n      const labelsObj = Object.keys(data['sumByMonth'][year]);\n      const labels = labelsObj.map((label) => {return label});\n      const items = valuesObj.map((value) => {\n        const valueItems = value.items;\n        const arr = [];\n        valueItems.forEach((item) => {\n          arr.push(item.amount);\n        });\n        return arr;\n      });\n\n      const sum = valuesObj.map((value) => {return value.sum});\n      const budgeted = (data['sumByMonth']['budgeted'].toFixed(2));\n      const label = `Amount Spent Per Month â€” Budget: $${budgeted}`;\n      const ctx = document.getElementById(\"categoryChart\");\n\n      const backgroundColor = [];\n\n      sum.map((value) => {\n        if (value <= budgeted) {\n          backgroundColor.push('#17B890');\n        } else {\n          backgroundColor.push('#DB504A')\n        }\n      });\n\n      const barData = {\n        labels,\n        datasets: [{\n          label,\n          data: sum,\n          backgroundColor,\n          borderColor: backgroundColor,\n          borderWidth: 1,\n          fill: false\n        }]\n      }\n\n      const lineData = {\n        labels,\n        datasets: [{\n          label,\n          data: sum,\n          borderColor: '#748386',\n          pointBackgroundColor: backgroundColor,\n          pointBorderColor: backgroundColor,\n          borderWidth: 2,\n          fill: false\n        }]\n      }\n\n      const options = {\n        title: {\n          display: true,\n          fontSize: 18,\n          text: `${category.charAt(0).toUpperCase() + category.slice(1)} Spending for ${year}`\n        },\n        legend: {\n          labels: {\n            boxWidth: 0,\n          }\n        },\n        scales: {\n          xAxes: [{\n            stacked: true,\n            ticks: {\n              callback: function(tick) {\n                return moment(tick).format('MMM');\n              }\n            }\n          }],\n          yAxes: [{\n            stacked: true,\n            ticks: {\n              beginAtZero: true,\n              type: 'linear',\n              ticks: {\n                min: 0,\n                max: 6500,\n                stepSize: 1300\n              },\n              callback: function(value, index, values) {\n                  return '$' + value;\n              }\n            }\n          }]\n        },\n        tooltips: {\n            enabled: true,\n            mode: 'single',\n            displayColors: false,\n            callbacks: {\n                title: function(tooltipItem) { \n                  return moment(this._data.labels[tooltipItem[0].index]).format('MMMM');\n                },\n                label: function(tooltipItems, data) { \n                  return `$${tooltipItems.yLabel}`;\n                }\n            }\n        },\n        hover: {\n          onHover: function(e) {\n            ctx.style.cursor = e[0] ? \"pointer\" : \"default\";\n          }\n        }\n      }\n\n      let categoryChart = new Chart(ctx, {\n        type: 'bar',\n        data: barData,\n        options\n      });\n\n      const chartBtns = [...document.querySelectorAll('button.chartBtn')];\n      let chartBtnVal = 'bar';\n      if (chartBtns) {\n        for (const chartBtn of chartBtns) {\n          chartBtn.addEventListener('click', function(e) {\n            chartBtnVal = this.value;\n            categoryChart.destroy();\n            if (chartBtnVal === 'line') {\n              categoryChart = new Chart(ctx, {\n                type: 'line',\n                data: lineData,\n                options\n              });\n            } else if (chartBtnVal === 'bar') {\n              categoryChart = new Chart(ctx, {\n                type: 'bar',\n                data: barData,\n                options\n              });\n            }\n          });\n        }\n      }\n\n      ctx.onclick = function(evt){\n        const activePoints = categoryChart.getElementsAtEvent(evt);\n        const firstPoint = activePoints[0];\n        const label = categoryChart.data.labels[firstPoint._index];\n        const value = categoryChart.data.datasets[firstPoint._datasetIndex].data[firstPoint._index];\n        if (firstPoint !== undefined)\n          window.location.href = `${window.location.href.split('?')[0]}?month=${label}&year=${year}`\n      };\n    })\n  }\n\n","function loadAllItems(year = moment().startOf('year').format('YYYY')) {\naxios.get(`/api/categories/items?year=${year}`)\n  .then(res => {\n    const data = res.data;\n    const labels = Object.keys(data['sumByMonth'][year]);\n    const values = Object.values(data['sumByMonth'][year]);\n    const budgeted = (data['sumByMonth']['totalBudget']).toFixed(2);\n    const ctx = document.getElementById(\"dashboardChart\");\n    const label = `Total Monthly Budget: $${budgeted}`;\n\n    const backgroundColor = [];\n\n    values.map((value) => {\n      if (value <= budgeted) {\n        backgroundColor.push('#17B890');\n      } else {\n        backgroundColor.push('#DB504A')\n      }\n    });\n\n    const barData = {\n      labels,\n      datasets: [{\n        label,\n        data: values,\n        backgroundColor,\n        borderColor: backgroundColor,\n        borderWidth: 1,\n        fill: false\n      }]\n    }\n\n    const lineData = {\n      labels,\n      datasets: [{\n        label,\n        data: values,\n        borderColor: '#748386',\n        pointBackgroundColor: backgroundColor,\n        pointBorderColor: backgroundColor,\n        borderWidth: 2,\n        fill: false\n      }]\n    }\n\n    const options = {\n      responsive: true,\n      title: {\n        display: true,\n        fontSize: 18,\n        text: `Spending for ${year}`\n      },\n      legend: {\n        labels: {\n          boxWidth: 0,\n        }\n      },\n      scales: {\n        xAxes: [{\n          ticks: {\n            callback: function(tick) {\n              return moment(tick).format('MMM');\n            }\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            callback: function(value, index, values) {\n                return '$' + value;\n            }\n          }\n        }]\n      },\n      tooltips: {\n          enabled: true,\n          mode: 'single',\n          displayColors: false,\n          callbacks: {\n              title: function(tooltipItem) { \n                return moment(this._data.labels[tooltipItem[0].index]).format('MMMM');\n              },\n              label: function(tooltipItems, data) { \n                return `$${tooltipItems.yLabel}`;\n              }\n          }\n      },\n      hover: {\n        onHover: function(e) {\n          ctx.style.cursor = e[0] ? \"pointer\" : \"default\";\n        }\n      }\n    }\n\n    let categoryChart = new Chart(ctx, {\n      type: 'bar',\n      data: barData,\n      options\n    });\n\n    const chartBtns = [...document.querySelectorAll('button.chartBtn')];\n    let chartBtnVal = 'bar';\n    if (chartBtns) {\n      for (const chartBtn of chartBtns) {\n        chartBtn.addEventListener('click', function(e) {\n          e.preventDefault();\n          chartBtnVal = this.value;\n          categoryChart.destroy();\n          if (chartBtnVal === 'line') {\n            categoryChart = new Chart(ctx, {\n              type: 'line',\n              data: lineData,\n              options\n            });\n          } else {\n            categoryChart = new Chart(ctx, {\n              type: 'bar',\n              data: barData,\n              options\n            });\n          }\n        });\n      }\n    }\n\n    ctx.onclick = function(evt){\n      const activePoints = categoryChart.getElementsAtEvent(evt);\n      const firstPoint = activePoints[0];\n      const label = categoryChart.data.labels[firstPoint._index];\n      const value = categoryChart.data.datasets[firstPoint._datasetIndex].data[firstPoint._index];\n      if (firstPoint !== undefined)\n        window.location.href = `${window.location.href.split('?')[0]}?month=${label}&year=${year}`\n    };\n  })\n}\n\n","/*jslint browser:true */\n\n(function () {\n  'use strict';\n\n  function updateQueryStringParameter(uri, key, value) {\n    var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n    var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\n    if (uri.match(re)) {\n      return uri.replace(re, '$1' + key + \"=\" + value + '$2');\n    }\n    else {\n      return uri + separator + key + \"=\" + value;\n    }\n  }\n\n  const dashboardCategoryFilter = document.querySelector('select[name=category-type-filter]');\n  if (dashboardCategoryFilter) {\n    dashboardCategoryFilter.addEventListener('change', function(e) {\n      const sort = 'sort';\n      const value = this.value;\n      window.location.href = updateQueryStringParameter(window.location.href, sort, value);\n    });\n  }\n  \n  // Mobile Menu Toggle Functionality\n  const mobileMenuIcon = document.querySelector('.mobile-menu-toggle');\n\n  const mobileMenuToggle = function () {\n    mobileMenuIcon.addEventListener('click', function (e) {\n      e.preventDefault();\n      document.querySelector('body').classList.toggle('menu-open');\n    });\n  };\n\n  mobileMenuToggle();\n\n  // Add class to form input if input has value\n\n  const formInputs = [...document.querySelectorAll('input:not([type=submit]):not([type=date]), select, textarea')];\n  if (formInputs) {\n    for (const formInput of formInputs) {\n      if (formInput.value) {\n        formInput.classList.add('has-value');\n      }\n      \n      formInput.addEventListener('change', function(e) {\n        if (formInput.value) {\n          this.classList.add('has-value');\n        } else {\n          this.classList.remove('has-value');\n        }\n      })\n    }\n  }\n\n  // Add validation to email input as you type\n\n  function validateEmail(email) {\n    const emailValidation = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return emailValidation.test(email);\n  }\n\n  const emailInputs = [...document.querySelectorAll('input[type=email]')];\n  for (const emailInput of emailInputs) {\n    emailInput.addEventListener('keydown', function(e) {\n      if (validateEmail(this.value)) {\n        this.classList.remove('invalid-input');\n      } else {\n        this.classList.add('invalid-input');\n      }\n    });\n  }\n\n  // Add validation to password and confirm password fields as you type\n\n  const passwordInput = document.querySelector('input[name=password]');\n  const confirmPasswordInput = document.querySelector('input[name=confirm-password]');\n\n  if (passwordInput && confirmPasswordInput) {\n    confirmPasswordInput.addEventListener('keyup', function(e) {\n      if (this.value !== passwordInput.value) {\n        this.classList.add('invalid-input');\n      } else {\n        this.classList.remove('invalid-input');\n        this.classList.add('passwords-match');\n        passwordInput.classList.add('passwords-match');\n      }\n    });\n  }\n\n  // Add class to parent container when amount field is in focus\n  const amountInput = document.querySelector('.amount-field input');\n\n  function addAmountInputClass() {\n    this.parentElement.classList.add('active-element');\n  }\n\n  function removeAmountInputClass() {\n    if (this.value) {\n      return;\n    }\n    \n    this.parentElement.classList.remove('active-element');\n  }\n\n  if (amountInput) {\n    if (amountInput.classList.contains('has-value')) {\n      amountInput.parentElement.classList.add('active-element');\n    }\n    amountInput.addEventListener('focus', addAmountInputClass, true);\n    amountInput.addEventListener('blur', addAmountInputClass, true);\n    amountInput.addEventListener('focusout', removeAmountInputClass, true)\n  }\n\n  // Change color of budget spent number depending on if it exceeds or is lower than budget goal number\n\n  function changeBudgetColor() {\n    const budgetDetails = [...document.querySelectorAll('.budget-meta')];\n\n    if (budgetDetails) {\n      budgetDetails.forEach(detail => {\n        const parent = detail.parentElement.parentElement;\n        const budgetSpentElement = detail.querySelector('.budget-spent');\n        const budgetSpent = Number(budgetSpentElement.textContent.replace(/[^0-9\\.-]+/g, \"\"));\n        const budgetGoal = Number(detail.querySelector('.budget-goal').textContent.replace(/[^0-9\\.-]+/g, \"\"));\n        const budgetClass = budgetSpent > budgetGoal ? 'overspend' : 'underspend';\n\n        budgetSpentElement.classList.add(budgetClass);\n        parent.classList.add(budgetClass);\n      });\n    }\n  }\n  \n  changeBudgetColor();\n\n}());\n"]}