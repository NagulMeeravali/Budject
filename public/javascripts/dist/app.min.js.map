{"version":3,"sources":["category-chart.js","category-pie-chart.js","dashboard-chart.js","main.js"],"names":["yearGraphs","category","year","arguments","length","undefined","moment","startOf","format","axios","get","then","res","data","valuesObj","Object","values","labelsObj","keys","labels","map","label","sum","value","valueItems","items","arr","forEach","item","push","amount","budgeted","toFixed","ctx","document","getElementById","largestSum","reduce","a","b","Math","max","axisValue","Number","ceil","backgroundColor","barData","datasets","borderColor","borderWidth","fill","lineData","pointBackgroundColor","pointBorderColor","options","title","display","fontSize","text","charAt","toUpperCase","slice","legend","boxWidth","scales","xAxes","stacked","ticks","callback","tick","yAxes","beginAtZero","type","index","tooltips","enabled","mode","displayColors","titleFontFamily","titleFontSize","titleFontColor","titleMarginBottom","bodyFontFamily","bodyFontSize","bodyFontColor","bodySpacing","callbacks","tooltipItem","this","_data","tooltipItems","yLabel","hover","onHover","e","style","cursor","categoryChart","Chart","chartBtns","querySelectorAll","chartBtnVal","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","addEventListener","destroy","err","return","onclick","evt","activePoints","getElementsAtEvent","firstPoint","_index","_datasetIndex","window","location","href","split","generateRandomColor","hash","i","floor","random","monthGraphs","catMonth","querySelector","textContent","catYear","queriedMonthData","month","pieArr","labelArr","color","itemSum","unspent","pieData","padding","percent","datasetIndex","cost","percentStatement","Array","loadAllItems","largestVal","responsive","preventDefault","updateQueryStringParameter","uri","key","re","RegExp","separator","indexOf","match","replace","validateEmail","email","test","addAmountInputClass","parentElement","classList","add","removeAmountInputClass","remove","dashboardCategoryFilter","mobileMenuIcon","toggle","formInputs","formInput","emailInputs","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","passwordInput","confirmPasswordInput","amountInput","contains","fileLabel","fileUpload","receiptImg","clearBtn","changeLabelVal","input","innerHTML","splitLabel","clearUpload","budgetDetails","detail","parent","budgetSpentElement","budgetSpent","budgetGoal","budgetClass","flashes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","flash","element","op","timer","setTimeout","setInterval","clearInterval","opacity","filter"],"mappings":"sJAAA,QAASA,YAAWC,GAA0D,GAAhDC,GAAgDC,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAAzCG,SAASC,QAAQ,QAAQC,OAAO,OACnEC,OAAMC,IAAN,iBAA2BT,EAA3B,eAAkDC,GAC/CS,KAAK,SAAAC,GACJ,GAAMC,GAAOD,EAAIC,KACXC,EAAYC,OAAOC,OAAOH,EAAA,WAAmBX,IAC7Ce,EAAYF,OAAOG,KAAKL,EAAA,WAAmBX,IAC3CiB,EAASF,EAAUG,IAAI,SAACC,GAAW,MAAOA,KAU1CC,GATQR,EAAUM,IAAI,SAACG,GAC3B,GAAMC,GAAaD,EAAME,MACnBC,IAIN,OAHAF,GAAWG,QAAQ,SAACC,GAClBF,EAAIG,KAAKD,EAAKE,UAETJ,IAGGZ,EAAUM,IAAI,SAACG,GAAW,MAAOA,GAAMD,OAC7CS,EAAYlB,EAAA,WAAA,SAA+BmB,QAAQ,GACnDX,EAAAA,qCAA6CU,EAC7CE,EAAMC,SAASC,eAAe,iBAC9BC,EAAad,EAAIe,OAAO,SAACC,EAAEC,GAAH,MAASC,MAAKC,IAAIH,EAAEC,KAE9CG,EAAY,EAEdA,GADEN,EAAaO,OAAOZ,GACmB,GAA7BS,KAAKI,KAAKR,EAAa,IAEY,GAAnCI,KAAKI,KAAKD,OAAOZ,GAAY,GAG3C,IAAMc,KAENvB,GAAIF,IAAI,SAACG,GACHA,GAASQ,EACXc,EAAgBhB,KAAK,WAErBgB,EAAgBhB,KAAK,YAIzB,IAAMiB,IACJ3B,OAAAA,EACA4B,WACE1B,MAAAA,EACAR,KAAMS,EACNuB,gBAAAA,EACAG,YAAaH,EACbI,YAAa,EACbC,MAAM,KAIJC,GACJhC,OAAAA,EACA4B,WACE1B,MAAAA,EACAR,KAAMS,EACN0B,YAAa,UACbI,qBAAsBP,EACtBQ,iBAAkBR,EAClBI,YAAa,EACbC,MAAM,KAIJI,GACJC,OACEC,SAAS,EACTC,SAAU,GACVC,KAASzD,EAAS0D,OAAO,GAAGC,cAAgB3D,EAAS4D,MAAM,GAA3D,iBAA8E3D,GAEhF4D,QACE3C,QACE4C,SAAU,IAGdC,QACEC,QACEC,SAAS,EACTC,OACEC,SAAU,SAASC,GACjB,MAAO/D,QAAO+D,EAAM,MAAM7D,OAAO,WAIvC8D,QACEJ,SAAS,EACTC,OACEI,aAAa,EACb9B,IAAKC,EACL8B,KAAM,SACNJ,SAAU,SAAS7C,EAAOkD,EAAOzD,GAC7B,MAAO,IAAMO,OAKvBmD,UACIC,SAAS,EACTC,KAAM,SACNC,eAAe,EACfhC,gBAAiB,UACjBiC,gBAAiB,gBACjBC,cAAe,GACfC,eAAgB,UAChBC,kBAAmB,EACnBC,eAAgB,gBAChBC,aAAc,GACdC,cAAe,UACfC,YAAa,GACbC,WACI/B,MAAO,SAASgC,GACd,MAAOjF,QAAOkF,KAAKC,MAAMtE,OAAOoE,EAAY,GAAGd,OAAQ,MAAMjE,OAAO,SAEtEa,MAAO,SAASqE,EAAc7E,GAC5B,MAAA,IAAY6E,EAAaC,OAAO3D,QAAQ,MAIlD4D,OACEC,QAAS,SAASC,GAChB7D,EAAI8D,MAAMC,OAASF,EAAE,GAAK,UAAY,aAKxCG,EAAgB,GAAIC,OAAMjE,GAC5BuC,KAAM,MACN3D,KAAMiC,EACNQ,QAAAA,IAGI6C,KAAAA,OAAAA,mBAAgBjE,SAASkE,iBAAiB,qBAC5CC,EAAc,KAClB,IAAIF,EAAW,CAAA,GAAAG,IAAA,EAAAC,GAAA,EAAAC,MAAAnG,EAAA,KACb,IAAA,GAAAoG,GAAAC,EAAuBP,EAAvBQ,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAkC,CAAAG,EAAAlF,MACvBwF,iBAAiB,QAAS,SAASjB,GAC1CO,EAAcb,KAAKjE,MACnB0E,EAAce,UACM,SAAhBX,EACFJ,EAAgB,GAAIC,OAAMjE,GACxBuC,KAAM,OACN3D,KAAMsC,EACNG,QAAAA,IAEuB,QAAhB+C,IACTJ,EAAgB,GAAIC,OAAMjE,GACxBuC,KAAM,MACN3D,KAAMiC,EACNQ,QAAAA,QAfK,MAAA2D,GAAAV,GAAA,EAAAC,EAAAS,EAAA,QAAA,KAAAX,GAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,KAAAC,KAsBfvE,EAAIkF,QAAU,SAASC,GACrB,GAAMC,GAAepB,EAAcqB,mBAAmBF,GAChDG,EAAaF,EAAa,GAC1BhG,EAAQ4E,EAAcpF,KAAKM,OAAOoG,EAAWC,OACrCvB,GAAcpF,KAAKkC,SAASwE,EAAWE,eAAe5G,KAAK0G,EAAWC,YACjEnH,KAAfkH,IACFG,OAAOC,SAASC,KAAUF,OAAOC,SAASC,KAAKC,MAAM,KAAK,GAA1D,UAAsExG,EAAtE,SAAoFnB,MCjK9F,QAAS4H,uBAGP,IAAK,GADDC,GAAO,IACFC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAHa,mBAGEvF,KAAKyF,MAAsB,GAAhBzF,KAAK0F,UAEjC,OAAOH,GAGT,QAASI,aAAYlI,GAA0D,GAAhDC,GAAgDC,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAAzCG,SAASC,QAAQ,QAAQC,OAAO,OACtEC,OAAMC,IAAN,iBAA2BT,EAA3B,eAAkDC,GAC/CS,KAAK,SAAAC,GACJ,GAAMC,GAAOD,EAAIC,KAGXuH,GAFYrH,OAAOC,OAAOH,EAAA,WAAmBX,IAElCgC,SAASmG,cAAc,sBAAsBC,aACxDC,EAAUrG,SAASmG,cAAc,qBAAqBC,YACtDvG,EAAYlB,EAAA,WAAA,SAA+BmB,QAAQ,GAEnDwG,GADa3H,EAAA,WAAmBP,SAASJ,KAAKqI,GAAS/H,OAAO,SAASF,SAASmI,MAAML,GAAU5H,OAAO,MAAMc,IAC1FT,EAAA,WAAmBP,SAASJ,KAAKqI,GAAS/H,OAAO,SAASF,SAASmI,MAAML,GAAU5H,OAAO,MAAMiB,OACnHiH,IACNF,GAAiBpH,IAAI,SAACQ,GACpB8G,EAAO7G,KAAKD,EAAKE,SAGnB,IAAM6G,KACNH,GAAiBpH,IAAI,SAACQ,GACpB+G,EAAS9G,KAAKD,EAAK2B,QAMrB,KAAK,GAHCtB,GAAMC,SAASC,eAAe,oBAE9BU,KACGmF,EAAI,EAAGA,EAAIW,EAASvI,OAAQ4H,IAAK,CACxC,GAAMY,GAAQd,qBACdjF,GAAgBhB,KAAK+G,GAIvB,GAAMC,GAAUH,EAAOrG,OAAO,SAACf,EAAKC,GAAN,MAAgBD,GAAMC,IAC9CuH,EAAU/G,EAAW8G,CAEvBC,GAAU,IACZJ,EAAO7G,KAAKiH,GACZH,EAAS9G,KAAK,uBACdgB,EAAgBhB,KAAK,WAGvB,IAAMkH,IACJ5H,OAAQwH,EACR5F,WACElC,KAAM6H,EACN1F,YAAa,UACbH,gBAAAA,EACAI,YAAa,EACbC,MAAM,KAIJI,GACJC,OACEC,SAAS,EACTwF,QAAS,GACTvF,SAAU,GACVC,KAASzD,EAAS0D,OAAO,GAAGC,cAAgB3D,EAAS4D,MAAM,GAA3D,iBAA8EuE,EAAWlI,GAE3F4D,QACEN,SAAS,EACTrC,QACE4C,SAAU,IAGdW,UACEC,SAAS,EACTC,KAAM,SACNC,eAAe,EACfhC,gBAAiB,UACjBiC,gBAAiB,gBACjBC,cAAe,GACfC,eAAgB,UAChBC,kBAAmB,GACnBC,eAAgB,gBAChBC,aAAc,GACdC,cAAe,UACfC,YAAa,GACbC,WACE/B,MAAO,SAASgC,GACd,MAAOC,MAAKC,MAAMtE,OAAOoE,EAAY,GAAGd,QAE1CpD,MAAO,SAASqE,EAAc7E,GAC5B,GAAMoI,IAAYtG,OAAO9B,EAAKkC,SAAS2C,EAAawD,cAAcrI,KAAK6E,EAAajB,QAAU1C,EAAY,KAAKC,QAAQ,GACjHmH,EAAAA,IAAYtI,EAAKkC,SAAS2C,EAAawD,cAAcrI,KAAK6E,EAAajB,OAAQzC,QAAQ,GACvFoH,EAAsBH,EAAtB,qBAEN,OADgB,IAAII,OAAMF,EAAMC,MAKtCxD,OACEC,QAAS,SAASC,GAChB7D,EAAI8D,MAAMC,OAASF,EAAE,GAAK,UAAY,YAKxB,IAAII,OAAMjE,GAC5BuC,KAAM,MACN3D,KAAMkI,EACNzF,QAAAA,+IC5GN,QAASgG,gBAA6D,GAAhDpJ,GAAgDC,UAAAC,OAAA,OAAAC,KAAAF,UAAA,GAAAA,UAAA,GAAzCG,SAASC,QAAQ,QAAQC,OAAO,OAC7DC,OAAMC,IAAN,8BAAwCR,GACrCS,KAAK,SAAAC,GACJ,GAAMC,GAAOD,EAAIC,KACXM,EAASJ,OAAOG,KAAKL,EAAA,WAAmBX,IACxCc,EAASD,OAAOC,OAAOH,EAAA,WAAmBX,IAC1CqJ,EAAaxI,OAAOG,KAAKF,GAAQqB,OAAO,SAAUC,EAAGC,GAAK,MAAOvB,GAAOsB,GAAKtB,EAAOuB,GAAKvB,EAAOsB,GAAKtB,EAAOuB,KAC5GR,EAAYlB,EAAA,WAAA,YAAmCmB,QAAQ,GACvDC,EAAMC,SAASC,eAAe,kBAC9Bd,EAAAA,0BAAkCU,EAEpCW,EAAY,EAEdA,GADE6G,EAAa5G,OAAOZ,GAC6C,GAAvDS,KAAKI,MAAM2G,EAA2B,GAAbA,EAAmB,GAAK,IAEd,GAAnC/G,KAAKI,KAAKD,OAAOZ,GAAY,GAG3C,IAAMc,KAEN7B,GAAOI,IAAI,SAACG,GACNA,GAASQ,EACXc,EAAgBhB,KAAK,WAErBgB,EAAgBhB,KAAK,YAIzB,IAAMiB,IACJ3B,OAAAA,EACA4B,WACE1B,MAAAA,EACAR,KAAMG,EACN6B,gBAAAA,EACAG,YAAaH,EACbI,YAAa,EACbC,MAAM,KAIJC,GACJhC,OAAAA,EACA4B,WACE1B,MAAAA,EACAR,KAAMG,EACNgC,YAAa,UACbI,qBAAsBP,EACtBQ,iBAAkBR,EAClBI,YAAa,EACbC,MAAM,KAIJI,GACJkG,YAAY,EACZjG,OACEC,SAAS,EACTC,SAAU,GACVC,KAAAA,gBAAsBxD,GAExB4D,QACE3C,QACE4C,SAAU,IAGdC,QACEC,QACEE,OACEC,SAAU,SAASC,GACjB,MAAO/D,QAAO+D,EAAM,MAAM7D,OAAO,WAIvC8D,QACEH,OACEI,aAAa,EACb9B,IAAKC,EACL0B,SAAU,SAAS7C,EAAOkD,EAAOzD,GAC7B,MAAO,IAAMO,OAKvBmD,UACIC,SAAS,EACTC,KAAM,SACNC,eAAe,EACfhC,gBAAiB,UACjBiC,gBAAiB,gBACjBC,cAAe,GACfC,eAAgB,UAChBC,kBAAmB,EACnBC,eAAgB,gBAChBC,aAAc,GACdC,cAAe,UACfC,YAAa,GACbC,WACI/B,MAAO,SAASgC,GACd,MAAOjF,QAAOkF,KAAKC,MAAMtE,OAAOoE,EAAY,GAAGd,OAAQ,MAAMjE,OAAO,SAEtEa,MAAO,SAASqE,EAAc7E,GAC5B,MAAA,IAAY6E,EAAaC,OAAO3D,QAAQ,MAIlD4D,OACEC,QAAS,SAASC,GAChB7D,EAAI8D,MAAMC,OAASF,EAAE,GAAK,UAAY,aAKxCG,EAAgB,GAAIC,OAAMjE,GAC5BuC,KAAM,MACN3D,KAAMiC,EACNQ,QAAAA,IAGI6C,KAAAA,OAAAA,mBAAgBjE,SAASkE,iBAAiB,qBAC5CC,EAAc,KAClB,IAAIF,EAAW,CAAA,GAAAG,IAAA,EAAAC,GAAA,EAAAC,MAAAnG,EAAA,KACb,IAAA,GAAAoG,GAAAC,EAAuBP,EAAvBQ,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAkC,CAAAG,EAAAlF,MACvBwF,iBAAiB,QAAS,SAASjB,GAC1CA,EAAE2D,iBACFpD,EAAcb,KAAKjE,MACnB0E,EAAce,UAEZf,EADkB,SAAhBI,EACc,GAAIH,OAAMjE,GACxBuC,KAAM,OACN3D,KAAMsC,EACNG,QAAAA,IAGc,GAAI4C,OAAMjE,GACxBuC,KAAM,MACN3D,KAAMiC,EACNQ,QAAAA,OAhBK,MAAA2D,GAAAV,GAAA,EAAAC,EAAAS,EAAA,QAAA,KAAAX,GAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,KAAAC,KAuBfvE,EAAIkF,QAAU,SAASC,GACrB,GAAMC,GAAepB,EAAcqB,mBAAmBF,GAChDG,EAAaF,EAAa,GAC1BhG,EAAQ4E,EAAcpF,KAAKM,OAAOoG,EAAWC,OACrCvB,GAAcpF,KAAKkC,SAASwE,EAAWE,eAAe5G,KAAK0G,EAAWC,YACjEnH,KAAfkH,IACFG,OAAOC,SAASC,KAAUF,OAAOC,SAASC,KAAKC,MAAM,KAAK,GAA1D,UAAsExG,EAAtE,SAAoFnB,gJCnJ3F,WAGC,QAASwJ,GAA2BC,EAAKC,EAAKrI,GAC5C,GAAIsI,GAAK,GAAIC,QAAO,SAAWF,EAAM,YAAa,KAC9CG,GAAkC,IAAtBJ,EAAIK,QAAQ,KAAc,IAAM,GAChD,OAAIL,GAAIM,MAAMJ,GACLF,EAAIO,QAAQL,EAAI,KAAOD,EAAM,IAAMrI,EAAQ,MAG3CoI,EAAMI,EAAYH,EAAM,IAAMrI,EA8CzC,QAAS4I,GAAcC,GAErB,MADwB,0JACDC,KAAKD,GAkC9B,QAASE,KACP9E,KAAK+E,cAAcC,UAAUC,IAAI,kBAGnC,QAASC,KACHlF,KAAKjE,OAITiE,KAAK+E,cAAcC,UAAUG,OAAO,kBAvFtC,GAAMC,GAA0B1I,SAASmG,cAAc,oCACnDuC,IACFA,EAAwB7D,iBAAiB,SAAU,SAASjB,GAC1D,GACMvE,GAAQiE,KAAKjE,KACnBmG,QAAOC,SAASC,KAAO8B,EAA2BhC,OAAOC,SAASC,KAFrD,OAEiErG,IAKlF,IAAMsJ,GAAiB3I,SAASmG,cAAc,wBAErB,WACvBwC,EAAe9D,iBAAiB,QAAS,SAAUjB,GACjDA,EAAE2D,iBACFvH,SAASmG,cAAc,QAAQmC,UAAUM,OAAO,iBAQpD,IAAMC,MAAAA,OAAAA,mBAAiB7I,SAASkE,iBAAiB,gEACjD,IAAI2E,EAAY,CAAA,GAAAzE,IAAA,EAAAC,GAAA,EAAAC,MAAAnG,EAAA,KACd,IAAA,GAAAoG,GAAAC,EAAwBqE,EAAxBpE,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAoC,CAAA,GAAzB0E,GAAyBvE,EAAAlF,OADtB,SACHyJ,GACLA,EAAUzJ,OACZyJ,EAAUR,UAAUC,IAAI,aAG1BO,EAAUjE,iBAAiB,SAAU,SAASjB,GACxCkF,EAAUzJ,MACZiE,KAAKgF,UAAUC,IAAI,aAEnBjF,KAAKgF,UAAUG,OAAO,gBATjBK,IADG,MAAA/D,GAAAV,GAAA,EAAAC,EAAAS,EAAA,QAAA,KAAAX,GAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,KAAAC,KAuBhB,GAAMyE,MAAAA,OAAAA,mBAAkB/I,SAASkE,iBAAiB,uBA7DvC8E,GAAA,EAAAC,GAAA,EAAAC,MAAA/K,EAAA,KA8DX,IAAA,GAAAgL,GAAAC,EAAyBL,EAAzBtE,OAAAC,cAAAsE,GAAAG,EAAAC,EAAAzE,QAAAC,MAAAoE,GAAA,EAAsC,CAAAG,EAAA9J,MACzBwF,iBAAiB,UAAW,SAASjB,GAC1CqE,EAAc3E,KAAKjE,OACrBiE,KAAKgF,UAAUG,OAAO,iBAEtBnF,KAAKgF,UAAUC,IAAI,oBAnEd,MAAAxD,GAAAkE,GAAA,EAAAC,EAAAnE,EAAA,QAAA,KAAAiE,GAAAI,EAAApE,QAAAoE,EAAApE,SAAA,QAAA,GAAAiE,EAAA,KAAAC,IA0EX,GAAMG,GAAgBrJ,SAASmG,cAAc,wBACvCmD,EAAuBtJ,SAASmG,cAAc,+BAEhDkD,IAAiBC,GACnBA,EAAqBzE,iBAAiB,QAAS,SAASjB,GAClDN,KAAKjE,QAAUgK,EAAchK,MAC/BiE,KAAKgF,UAAUC,IAAI,kBAEnBjF,KAAKgF,UAAUG,OAAO,iBACtBnF,KAAKgF,UAAUC,IAAI,mBACnBc,EAAcf,UAAUC,IAAI,qBAMlC,IAAMgB,GAAcvJ,SAASmG,cAAc,sBAcvCoD,KACEA,EAAYjB,UAAUkB,SAAS,cACjCD,EAAYlB,cAAcC,UAAUC,IAAI,kBAE1CgB,EAAY1E,iBAAiB,QAASuD,GAAqB,GAC3DmB,EAAY1E,iBAAiB,OAAQuD,GAAqB,GAC1DmB,EAAY1E,iBAAiB,WAAY2D,GAAwB,GAInE,IAAMiB,GAAYzJ,SAASmG,cAAc,0BACnCuD,EAAa1J,SAASmG,cAAc,kBACpCwD,EAAa3J,SAASmG,cAAc,gBACpCyD,EAAW5J,SAASmG,cAAc,iBAElC0D,EAAiB,SAASC,EAAO3K,GACrC,GAAmB,IAAf2K,EAAMzK,MACRF,EAAM4K,UAAY,uBACb,CACL,GAAMC,GAAaF,EAAMzK,MAAMsG,MAAM,KACrCxG,GAAM4K,UAAYC,EAAWA,EAAW9L,OAAS,KAI/C+L,EAAc,WAClBP,EAAWrK,MAAQ,GACnBoK,EAAUrD,YAAc,oBACxB9C,KAAKO,MAAMvC,QAAU,OACjBqI,IACFA,EAAW9F,MAAMvC,QAAU,QAI3BoI,KACFA,EAAW7E,iBAAiB,SAAU,WACpCgF,EAAeH,EAAYD,KAG7BC,EAAW7E,iBAAiB,SAAU,WAChC6E,EAAWrK,QACbuK,EAAS/F,MAAMvC,QAAU,WAI7BsI,EAAS/E,iBAAiB,QAASoF,IAKrC,WACE,GAAMC,MAAAA,OAAAA,mBAAoBlK,SAASkE,iBAAiB,iBAEhDgG,IACFA,EAAczK,QAAQ,SAAA0K,GACpB,GAAMC,GAASD,EAAO9B,cAAcA,cAC9BgC,EAAqBF,EAAOhE,cAAc,gBAChD,IAAIkE,EAAoB,CACtB,GAAMC,GAAc7J,OAAO4J,EAAmBjE,YAAY4B,QAAQ,cAAe,KAC3EuC,EAAa9J,OAAO0J,EAAOhE,cAAc,gBAAgBC,YAAY4B,QAAQ,cAAe,KAC5FwC,EAAcF,EAAcC,EAAa,YAAc,YAC7DF,GAAmB/B,UAAUC,IAAIiC,GACjCJ,EAAO9B,UAAUC,IAAIiC,QAwB7B,IAAMC,GAAUzK,SAASkE,iBAAiB,UA7L/BwG,GAAA,EAAAC,GAAA,EAAAC,MAAAzM,EAAA,KA8LX,IAAA,GAAA0M,GAAAC,EAAoBL,EAApBhG,OAAAC,cAAAgG,GAAAG,EAAAC,EAAAnG,QAAAC,MAAA8F,GAAA,EAA6B,CAAA,GAAlBK,GAAkBF,EAAAxL,OAhB7B,SAAc2L,GACV,GAAIC,GAAK,EACHC,EAAQC,WAAW,WACvBC,YAAY,WACNH,GAAM,KACNI,cAAcH,GACdF,EAAQnH,MAAMvC,QAAU,QAE5B0J,EAAQnH,MAAMyH,QAAUL,EACxBD,EAAQnH,MAAM0H,OAAS,iBAAwB,IAALN,EAAW,IACrDA,GAAW,GAALA,GACP,MACF,MAKEF,IA/LI,MAAAhG,GAAA4F,GAAA,EAAAC,EAAA7F,EAAA,QAAA,KAAA2F,GAAAI,EAAA9F,QAAA8F,EAAA9F,SAAA,QAAA,GAAA2F,EAAA,KAAAC","file":"app.min.js","sourcesContent":["function yearGraphs(category, year = moment().startOf('year').format('YYYY')) {\n  axios.get(`/api/category/${category}/items?year=${year}`)\n    .then(res => {\n      const data = res.data;\n      const valuesObj = Object.values(data['sumByMonth'][year]);\n      const labelsObj = Object.keys(data['sumByMonth'][year]);\n      const labels = labelsObj.map((label) => {return label});\n      const items = valuesObj.map((value) => {\n        const valueItems = value.items;\n        const arr = [];\n        valueItems.forEach((item) => {\n          arr.push(item.amount);\n        });\n        return arr;\n      });\n\n      const sum = valuesObj.map((value) => {return value.sum});\n      const budgeted = (data['sumByMonth']['budgeted'].toFixed(2));\n      const label = `Amount Spent Per Month — Budget: $${budgeted}`;\n      const ctx = document.getElementById(\"categoryChart\");\n      const largestSum = sum.reduce((a,b) => Math.max(a,b));\n\n      let axisValue = \"\";\n      if (largestSum > Number(budgeted)) {\n        axisValue = Math.ceil(largestSum / 10) * 10;\n      } else {\n        axisValue = Math.ceil(Number(budgeted) / 10) * 10;\n      }\n\n      const backgroundColor = [];\n\n      sum.map((value) => {\n        if (value <= budgeted) {\n          backgroundColor.push('#17B890');\n        } else {\n          backgroundColor.push('#DB504A')\n        }\n      });\n\n      const barData = {\n        labels,\n        datasets: [{\n          label,\n          data: sum,\n          backgroundColor,\n          borderColor: backgroundColor,\n          borderWidth: 1,\n          fill: false\n        }]\n      }\n\n      const lineData = {\n        labels,\n        datasets: [{\n          label,\n          data: sum,\n          borderColor: '#748386',\n          pointBackgroundColor: backgroundColor,\n          pointBorderColor: backgroundColor,\n          borderWidth: 2,\n          fill: false\n        }]\n      }\n\n      const options = {\n        title: {\n          display: true,\n          fontSize: 18,\n          text: `${category.charAt(0).toUpperCase() + category.slice(1)} Spending for ${year}`\n        },\n        legend: {\n          labels: {\n            boxWidth: 0,\n          }\n        },\n        scales: {\n          xAxes: [{\n            stacked: true,\n            ticks: {\n              callback: function(tick) {\n                return moment(tick, 'MM').format('MMM');\n              }\n            }\n          }],\n          yAxes: [{\n            stacked: true,\n            ticks: {\n              beginAtZero: true,\n              max: axisValue,\n              type: 'linear',\n              callback: function(value, index, values) {\n                  return '$' + value;\n              }\n            }\n          }]\n        },\n        tooltips: {\n            enabled: true,\n            mode: 'single',\n            displayColors: false,\n            backgroundColor: '#FAFFFD',\n            titleFontFamily: \"'Lora', serif\",\n            titleFontSize: 16,\n            titleFontColor: '#252323',\n            titleMarginBottom: 8,\n            bodyFontFamily: \"'Lora', serif\",\n            bodyFontSize: 12,\n            bodyFontColor: '#252323',\n            bodySpacing: 10,\n            callbacks: {\n                title: function(tooltipItem) { \n                  return moment(this._data.labels[tooltipItem[0].index], 'MM').format('MMMM');\n                },\n                label: function(tooltipItems, data) { \n                  return `$${(tooltipItems.yLabel.toFixed(2))}`;\n                }\n            }\n        },\n        hover: {\n          onHover: function(e) {\n            ctx.style.cursor = e[0] ? \"pointer\" : \"default\";\n          }\n        }\n      }\n\n      let categoryChart = new Chart(ctx, {\n        type: 'bar',\n        data: barData,\n        options\n      });\n\n      const chartBtns = [...document.querySelectorAll('button.chartBtn')];\n      let chartBtnVal = 'bar';\n      if (chartBtns) {\n        for (const chartBtn of chartBtns) {\n          chartBtn.addEventListener('click', function(e) {\n            chartBtnVal = this.value;\n            categoryChart.destroy();\n            if (chartBtnVal === 'line') {\n              categoryChart = new Chart(ctx, {\n                type: 'line',\n                data: lineData,\n                options\n              });\n            } else if (chartBtnVal === 'bar') {\n              categoryChart = new Chart(ctx, {\n                type: 'bar',\n                data: barData,\n                options\n              });\n            }\n          });\n        }\n      }\n\n      ctx.onclick = function(evt){\n        const activePoints = categoryChart.getElementsAtEvent(evt);\n        const firstPoint = activePoints[0];\n        const label = categoryChart.data.labels[firstPoint._index];\n        const value = categoryChart.data.datasets[firstPoint._datasetIndex].data[firstPoint._index];\n        if (firstPoint !== undefined)\n          window.location.href = `${window.location.href.split('?')[0]}?month=${label}&year=${year}`\n      };\n    })\n  }\n\n","function generateRandomColor() {\n  const digits = '0123456789ABCDEF';\n  let hash = '#';\n  for (let i = 0; i < 6; i++) {\n    hash += digits[Math.floor(Math.random() * 16)];\n  }\n  return hash;\n}\n\nfunction monthGraphs(category, year = moment().startOf('year').format('YYYY')) {\naxios.get(`/api/category/${category}/items?year=${year}`)\n  .then(res => {\n    const data = res.data;\n    const valuesObj = Object.values(data['sumByMonth'][year]);\n\n    const catMonth = document.querySelector('.datepicker .month').textContent;\n    const catYear = document.querySelector('.datepicker .year').textContent;\n    const budgeted = (data['sumByMonth']['budgeted'].toFixed(2));\n    const queriedSum = data['sumByMonth'][moment().year(catYear).format(\"YYYY\")][moment().month(catMonth).format(\"M\")].sum;\n    const queriedMonthData = data['sumByMonth'][moment().year(catYear).format(\"YYYY\")][moment().month(catMonth).format(\"M\")].items;\n    const pieArr = [];\n    queriedMonthData.map((item) => {\n      pieArr.push(item.amount);\n    })\n\n    const labelArr = [];\n    queriedMonthData.map((item) => {\n      labelArr.push(item.title);\n    })\n\n    const ctx = document.getElementById(\"categoryPieChart\");\n\n    const backgroundColor = [];\n    for (let i = 0; i < labelArr.length; i++) {\n      const color = generateRandomColor();\n      backgroundColor.push(color);\n    }\n\n    // If budget hasn't been exceeded, add in remaining section to pie chart\n    const itemSum = pieArr.reduce((sum, value) => sum + value);\n    const unspent = budgeted - itemSum;\n\n    if (unspent > 0) {\n      pieArr.push(unspent)\n      labelArr.push('Remaining in Budget')\n      backgroundColor.push('#748386');\n    }\n\n    const pieData = {\n      labels: labelArr,\n      datasets: [{\n        data: pieArr,\n        borderColor: '#748386',\n        backgroundColor,\n        borderWidth: 1,\n        fill: false\n      }]\n    }\n\n    const options = {\n      title: {\n        display: true,\n        padding: 20,\n        fontSize: 22,\n        text: `${category.charAt(0).toUpperCase() + category.slice(1)} Spending for ${catMonth}${year}`\n      },\n      legend: {\n        display: false,\n        labels: {\n          boxWidth: 0,\n        }\n      },\n      tooltips: {\n        enabled: true,\n        mode: 'single',\n        displayColors: false,\n        backgroundColor: '#FAFFFD',\n        titleFontFamily: \"'Lora', serif\",\n        titleFontSize: 16,\n        titleFontColor: '#252323',\n        titleMarginBottom: 10,\n        bodyFontFamily: \"'Lora', serif\",\n        bodyFontSize: 12,\n        bodyFontColor: '#252323',\n        bodySpacing: 10,\n        callbacks: {\n          title: function(tooltipItem) { \n            return this._data.labels[tooltipItem[0].index];\n          },\n          label: function(tooltipItems, data) {\n            const percent = ((Number(data.datasets[tooltipItems.datasetIndex].data[tooltipItems.index]) / budgeted) * 100).toFixed(2);\n            const cost = `$${(data.datasets[tooltipItems.datasetIndex].data[tooltipItems.index]).toFixed(2)}`;\n            const percentStatement = `${percent}% of total spending`;\n            const tooltip = new Array(cost, percentStatement);\n            return tooltip;\n          },\n        }\n      },\n      hover: {\n        onHover: function(e) {\n          ctx.style.cursor = e[0] ? \"pointer\" : \"default\";\n        }\n      }\n    }\n\n    let categoryChart = new Chart(ctx, {\n      type: 'pie',\n      data: pieData,\n      options\n    });\n  })\n}\n\n","function loadAllItems(year = moment().startOf('year').format('YYYY')) {\naxios.get(`/api/categories/items?year=${year}`)\n  .then(res => {\n    const data = res.data;\n    const labels = Object.keys(data['sumByMonth'][year]);\n    const values = Object.values(data['sumByMonth'][year]);\n    const largestVal = Object.keys(values).reduce(function (a, b) { return values[a] > values[b] ? values[a] : values[b] });\n    const budgeted = (data['sumByMonth']['totalBudget']).toFixed(2);\n    const ctx = document.getElementById(\"dashboardChart\");\n    const label = `Total Monthly Budget: $${budgeted}`;\n\n    let axisValue = \"\";\n    if (largestVal > Number(budgeted)) {\n      axisValue = Math.ceil((largestVal + (largestVal * .2) + 1) / 10) * 10;\n    } else {\n      axisValue = Math.ceil(Number(budgeted) / 10) * 10;\n    }\n\n    const backgroundColor = [];\n\n    values.map((value) => {\n      if (value <= budgeted) {\n        backgroundColor.push('#17B890');\n      } else {\n        backgroundColor.push('#DB504A')\n      }\n    });\n\n    const barData = {\n      labels,\n      datasets: [{\n        label,\n        data: values,\n        backgroundColor,\n        borderColor: backgroundColor,\n        borderWidth: 1,\n        fill: false\n      }]\n    }\n\n    const lineData = {\n      labels,\n      datasets: [{\n        label,\n        data: values,\n        borderColor: '#748386',\n        pointBackgroundColor: backgroundColor,\n        pointBorderColor: backgroundColor,\n        borderWidth: 2,\n        fill: false\n      }]\n    }\n\n    const options = {\n      responsive: true,\n      title: {\n        display: true,\n        fontSize: 18,\n        text: `Spending for ${year}`\n      },\n      legend: {\n        labels: {\n          boxWidth: 0,\n        }\n      },\n      scales: {\n        xAxes: [{\n          ticks: {\n            callback: function(tick) {\n              return moment(tick, 'MM').format('MMM');\n            }\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            max: axisValue,\n            callback: function(value, index, values) {\n                return '$' + value;\n            }\n          }\n        }]\n      },\n      tooltips: {\n          enabled: true,\n          mode: 'single',\n          displayColors: false,\n          backgroundColor: '#FAFFFD',\n          titleFontFamily: \"'Lora', serif\",\n          titleFontSize: 16,\n          titleFontColor: '#252323',\n          titleMarginBottom: 8,\n          bodyFontFamily: \"'Lora', serif\",\n          bodyFontSize: 12,\n          bodyFontColor: '#252323',\n          bodySpacing: 10,\n          callbacks: {\n              title: function(tooltipItem) { \n                return moment(this._data.labels[tooltipItem[0].index], 'MM').format('MMMM');\n              },\n              label: function(tooltipItems, data) { \n                return `$${(tooltipItems.yLabel.toFixed(2))}`;\n              }\n          }\n      },\n      hover: {\n        onHover: function(e) {\n          ctx.style.cursor = e[0] ? \"pointer\" : \"default\";\n        }\n      }\n    }\n\n    let categoryChart = new Chart(ctx, {\n      type: 'bar',\n      data: barData,\n      options\n    });\n\n    const chartBtns = [...document.querySelectorAll('button.chartBtn')];\n    let chartBtnVal = 'bar';\n    if (chartBtns) {\n      for (const chartBtn of chartBtns) {\n        chartBtn.addEventListener('click', function(e) {\n          e.preventDefault();\n          chartBtnVal = this.value;\n          categoryChart.destroy();\n          if (chartBtnVal === 'line') {\n            categoryChart = new Chart(ctx, {\n              type: 'line',\n              data: lineData,\n              options\n            });\n          } else {\n            categoryChart = new Chart(ctx, {\n              type: 'bar',\n              data: barData,\n              options\n            });\n          }\n        });\n      }\n    }\n\n    ctx.onclick = function(evt){\n      const activePoints = categoryChart.getElementsAtEvent(evt);\n      const firstPoint = activePoints[0];\n      const label = categoryChart.data.labels[firstPoint._index];\n      const value = categoryChart.data.datasets[firstPoint._datasetIndex].data[firstPoint._index];\n      if (firstPoint !== undefined)\n        window.location.href = `${window.location.href.split('?')[0]}?month=${label}&year=${year}`\n    };\n  })\n}\n","/*jslint browser:true */\n\n(function () {\n  'use strict';\n\n  function updateQueryStringParameter(uri, key, value) {\n    var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n    var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\n    if (uri.match(re)) {\n      return uri.replace(re, '$1' + key + \"=\" + value + '$2');\n    }\n    else {\n      return uri + separator + key + \"=\" + value;\n    }\n  }\n\n  const dashboardCategoryFilter = document.querySelector('select[name=category-type-filter]');\n  if (dashboardCategoryFilter) {\n    dashboardCategoryFilter.addEventListener('change', function(e) {\n      const sort = 'sort';\n      const value = this.value;\n      window.location.href = updateQueryStringParameter(window.location.href, sort, value);\n    });\n  }\n  \n  // Mobile Menu Toggle Functionality\n  const mobileMenuIcon = document.querySelector('.mobile-menu-toggle');\n\n  const mobileMenuToggle = function () {\n    mobileMenuIcon.addEventListener('click', function (e) {\n      e.preventDefault();\n      document.querySelector('body').classList.toggle('menu-open');\n    });\n  };\n\n  mobileMenuToggle();\n\n  // Add class to form input if input has value\n\n  const formInputs = [...document.querySelectorAll('input:not([type=submit]):not([type=date]), select, textarea')];\n  if (formInputs) {\n    for (const formInput of formInputs) {\n      if (formInput.value) {\n        formInput.classList.add('has-value');\n      }\n      \n      formInput.addEventListener('change', function(e) {\n        if (formInput.value) {\n          this.classList.add('has-value');\n        } else {\n          this.classList.remove('has-value');\n        }\n      })\n    }\n  }\n\n  // Add validation to email input as you type\n\n  function validateEmail(email) {\n    const emailValidation = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return emailValidation.test(email);\n  }\n\n  const emailInputs = [...document.querySelectorAll('input[type=email]')];\n  for (const emailInput of emailInputs) {\n    emailInput.addEventListener('keydown', function(e) {\n      if (validateEmail(this.value)) {\n        this.classList.remove('invalid-input');\n      } else {\n        this.classList.add('invalid-input');\n      }\n    });\n  }\n\n  // Add validation to password and confirm password fields as you type\n\n  const passwordInput = document.querySelector('input[name=password]');\n  const confirmPasswordInput = document.querySelector('input[name=confirm-password]');\n\n  if (passwordInput && confirmPasswordInput) {\n    confirmPasswordInput.addEventListener('keyup', function(e) {\n      if (this.value !== passwordInput.value) {\n        this.classList.add('invalid-input');\n      } else {\n        this.classList.remove('invalid-input');\n        this.classList.add('passwords-match');\n        passwordInput.classList.add('passwords-match');\n      }\n    });\n  }\n\n  // Add class to parent container when amount field is in focus\n  const amountInput = document.querySelector('.amount-field input');\n\n  function addAmountInputClass() {\n    this.parentElement.classList.add('active-element');\n  }\n\n  function removeAmountInputClass() {\n    if (this.value) {\n      return;\n    }\n    \n    this.parentElement.classList.remove('active-element');\n  }\n\n  if (amountInput) {\n    if (amountInput.classList.contains('has-value')) {\n      amountInput.parentElement.classList.add('active-element');\n    }\n    amountInput.addEventListener('focus', addAmountInputClass, true);\n    amountInput.addEventListener('blur', addAmountInputClass, true);\n    amountInput.addEventListener('focusout', removeAmountInputClass, true)\n  }\n\n  // File upload label update\n  const fileLabel = document.querySelector('.file-field .labelText');\n  const fileUpload = document.querySelector('.js-fileUpload');\n  const receiptImg = document.querySelector('.receipt-img')\n  const clearBtn = document.querySelector('.clear-upload');\n\n  const changeLabelVal = function(input, label) {\n    if (input.value == \"\") {\n      label.innerHTML = \"No File Uploaded\";\n    } else {\n      const splitLabel = input.value.split('\\\\');\n      label.innerHTML = splitLabel[splitLabel.length - 1];\n    }\n  };\n\n  const clearUpload = function() {\n    fileUpload.value = \"\";\n    fileLabel.textContent = \"No Image Uploaded\";\n    this.style.display = \"none\";\n    if (receiptImg) {\n      receiptImg.style.display = \"none\";\n    }\n  }\n\n  if (fileUpload) {\n    fileUpload.addEventListener('change', () => {\n      changeLabelVal(fileUpload, fileLabel);\n    });\n\n    fileUpload.addEventListener('change', () => {\n      if (fileUpload.value) {\n        clearBtn.style.display = \"block\";\n      }\n    });\n\n    clearBtn.addEventListener('click', clearUpload);\n  }\n\n  // Change color of budget spent number depending on if it exceeds or is lower than budget goal number\n\n  function changeBudgetColor() {\n    const budgetDetails = [...document.querySelectorAll('.budget-meta')];\n\n    if (budgetDetails) {\n      budgetDetails.forEach(detail => {\n        const parent = detail.parentElement.parentElement;\n        const budgetSpentElement = detail.querySelector('.budget-spent');\n        if (budgetSpentElement) {\n          const budgetSpent = Number(budgetSpentElement.textContent.replace(/[^0-9\\.-]+/g, \"\"));\n          const budgetGoal = Number(detail.querySelector('.budget-goal').textContent.replace(/[^0-9\\.-]+/g, \"\"));\n          const budgetClass = budgetSpent > budgetGoal ? 'overspend' : 'underspend';\n          budgetSpentElement.classList.add(budgetClass);\n          parent.classList.add(budgetClass);\n        }\n      });\n    }\n  }\n  \n  changeBudgetColor();\n\n  // Fade out flash after 5 seconds\n  function fade(element) {\n      let op = 1;  // initial opacity\n      const timer = setTimeout(function() {\n        setInterval(function () {\n          if (op <= 0.3){\n              clearInterval(timer);\n              element.style.display = 'none';\n          }\n          element.style.opacity = op;\n          element.style.filter = 'alpha(opacity=' + op * 100 + \")\";\n          op -= op * 0.1;\n      }, 300)\n    }, 3000);\n  }\n\n  const flashes = document.querySelectorAll('.flash');\n  for (const flash of flashes) {\n    fade(flash);\n  }\n\n}());\n"]}