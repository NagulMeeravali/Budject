{"version":3,"sources":["category-chart.js","category-pie-chart.js","dashboard-chart.js","main.js"],"names":["yearGraphs","category","year","arguments","length","undefined","moment","startOf","format","axios","get","then","res","data","valuesObj","Object","values","labelsObj","keys","labels","map","label","sum","value","valueItems","items","arr","forEach","item","push","amount","budgeted","toFixed","ctx","document","getElementById","backgroundColor","barData","datasets","borderColor","borderWidth","fill","lineData","pointBackgroundColor","pointBorderColor","options","title","display","fontSize","text","charAt","toUpperCase","slice","legend","boxWidth","scales","xAxes","stacked","ticks","callback","tick","yAxes","beginAtZero","type","min","max","stepSize","index","tooltips","enabled","mode","displayColors","titleFontFamily","titleFontSize","titleFontColor","titleMarginBottom","bodyFontFamily","bodyFontSize","bodyFontColor","bodySpacing","callbacks","tooltipItem","this","_data","tooltipItems","yLabel","hover","onHover","e","style","cursor","categoryChart","Chart","chartBtns","querySelectorAll","chartBtnVal","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","addEventListener","destroy","err","return","onclick","evt","activePoints","getElementsAtEvent","firstPoint","_index","_datasetIndex","window","location","href","split","generateRandomColor","hash","i","Math","floor","random","monthGraphs","catMonth","querySelector","textContent","catYear","queriedSum","month","queriedMonthData","pieArr","labelArr","color","itemSum","reduce","unspent","pieData","padding","percent","Number","datasetIndex","cost","percentStatement","Array","loadAllItems","responsive","preventDefault","updateQueryStringParameter","uri","key","re","RegExp","separator","indexOf","match","replace","validateEmail","email","test","addAmountInputClass","parentElement","classList","add","removeAmountInputClass","remove","dashboardCategoryFilter","mobileMenuIcon","toggle","formInputs","formInput","emailInputs","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","passwordInput","confirmPasswordInput","amountInput","contains","budgetDetails","detail","parent","budgetSpentElement","budgetSpent","budgetGoal","budgetClass","flashes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","flash","element","op","timer","setTimeout","setInterval","clearInterval","opacity","filter"],"mappings":"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","file":"app.min.js","sourcesContent":["function yearGraphs(category, year = moment().startOf('year').format('YYYY')) {\n  axios.get(`/api/category/${category}/items?year=${year}`)\n    .then(res => {\n      const data = res.data;\n      const valuesObj = Object.values(data['sumByMonth'][year]);\n      const labelsObj = Object.keys(data['sumByMonth'][year]);\n      const labels = labelsObj.map((label) => {return label});\n      const items = valuesObj.map((value) => {\n        const valueItems = value.items;\n        const arr = [];\n        valueItems.forEach((item) => {\n          arr.push(item.amount);\n        });\n        return arr;\n      });\n\n      const sum = valuesObj.map((value) => {return value.sum});\n      const budgeted = (data['sumByMonth']['budgeted'].toFixed(2));\n      const label = `Amount Spent Per Month — Budget: $${budgeted}`;\n      const ctx = document.getElementById(\"categoryChart\");\n\n      const backgroundColor = [];\n\n      sum.map((value) => {\n        if (value <= budgeted) {\n          backgroundColor.push('#17B890');\n        } else {\n          backgroundColor.push('#DB504A')\n        }\n      });\n\n      const barData = {\n        labels,\n        datasets: [{\n          label,\n          data: sum,\n          backgroundColor,\n          borderColor: backgroundColor,\n          borderWidth: 1,\n          fill: false\n        }]\n      }\n\n      const lineData = {\n        labels,\n        datasets: [{\n          label,\n          data: sum,\n          borderColor: '#748386',\n          pointBackgroundColor: backgroundColor,\n          pointBorderColor: backgroundColor,\n          borderWidth: 2,\n          fill: false\n        }]\n      }\n\n      const options = {\n        title: {\n          display: true,\n          fontSize: 18,\n          text: `${category.charAt(0).toUpperCase() + category.slice(1)} Spending for ${year}`\n        },\n        legend: {\n          labels: {\n            boxWidth: 0,\n          }\n        },\n        scales: {\n          xAxes: [{\n            stacked: true,\n            ticks: {\n              callback: function(tick) {\n                return moment(tick, 'MM').format('MMM');\n              }\n            }\n          }],\n          yAxes: [{\n            stacked: true,\n            ticks: {\n              beginAtZero: true,\n              type: 'linear',\n              ticks: {\n                min: 0,\n                max: 6500,\n                stepSize: 1300\n              },\n              callback: function(value, index, values) {\n                  return '$' + value;\n              }\n            }\n          }]\n        },\n        tooltips: {\n            enabled: true,\n            mode: 'single',\n            displayColors: false,\n            backgroundColor: '#FAFFFD',\n            titleFontFamily: \"'Lora', serif\",\n            titleFontSize: 16,\n            titleFontColor: '#252323',\n            titleMarginBottom: 8,\n            bodyFontFamily: \"'Lora', serif\",\n            bodyFontSize: 12,\n            bodyFontColor: '#252323',\n            bodySpacing: 10,\n            callbacks: {\n                title: function(tooltipItem) { \n                  return moment(this._data.labels[tooltipItem[0].index], 'MM').format('MMMM');\n                },\n                label: function(tooltipItems, data) { \n                  return `$${(tooltipItems.yLabel.toFixed(2))}`;\n                }\n            }\n        },\n        hover: {\n          onHover: function(e) {\n            ctx.style.cursor = e[0] ? \"pointer\" : \"default\";\n          }\n        }\n      }\n\n      let categoryChart = new Chart(ctx, {\n        type: 'bar',\n        data: barData,\n        options\n      });\n\n      const chartBtns = [...document.querySelectorAll('button.chartBtn')];\n      let chartBtnVal = 'bar';\n      if (chartBtns) {\n        for (const chartBtn of chartBtns) {\n          chartBtn.addEventListener('click', function(e) {\n            chartBtnVal = this.value;\n            categoryChart.destroy();\n            if (chartBtnVal === 'line') {\n              categoryChart = new Chart(ctx, {\n                type: 'line',\n                data: lineData,\n                options\n              });\n            } else if (chartBtnVal === 'bar') {\n              categoryChart = new Chart(ctx, {\n                type: 'bar',\n                data: barData,\n                options\n              });\n            }\n          });\n        }\n      }\n\n      ctx.onclick = function(evt){\n        const activePoints = categoryChart.getElementsAtEvent(evt);\n        const firstPoint = activePoints[0];\n        const label = categoryChart.data.labels[firstPoint._index];\n        const value = categoryChart.data.datasets[firstPoint._datasetIndex].data[firstPoint._index];\n        if (firstPoint !== undefined)\n          window.location.href = `${window.location.href.split('?')[0]}?month=${label}&year=${year}`\n      };\n    })\n  }\n\n","function generateRandomColor() {\n  const digits = '0123456789ABCDEF';\n  let hash = '#';\n  for (let i = 0; i < 6; i++) {\n    hash += digits[Math.floor(Math.random() * 16)];\n  }\n  return hash;\n}\n\nfunction monthGraphs(category, year = moment().startOf('year').format('YYYY')) {\naxios.get(`/api/category/${category}/items?year=${year}`)\n  .then(res => {\n    const data = res.data;\n    const valuesObj = Object.values(data['sumByMonth'][year]);\n\n    const catMonth = document.querySelector('.datepicker .month').textContent;\n    const catYear = document.querySelector('.datepicker .year').textContent;\n    const budgeted = (data['sumByMonth']['budgeted'].toFixed(2));\n    const queriedSum = data['sumByMonth'][moment().year(catYear).format(\"YYYY\")][moment().month(catMonth).format(\"M\")].sum;\n    const queriedMonthData = data['sumByMonth'][moment().year(catYear).format(\"YYYY\")][moment().month(catMonth).format(\"M\")].items;\n    const pieArr = [];\n    queriedMonthData.map((item) => {\n      pieArr.push(item.amount);\n    })\n\n    const labelArr = [];\n    queriedMonthData.map((item) => {\n      labelArr.push(item.title);\n    })\n\n    const ctx = document.getElementById(\"categoryPieChart\");\n\n    const backgroundColor = [];\n    for (let i = 0; i < labelArr.length; i++) {\n      const color = generateRandomColor();\n      backgroundColor.push(color);\n    }\n\n    // If budget hasn't been exceeded, add in remaining section to pie chart\n    const itemSum = pieArr.reduce((sum, value) => sum + value);\n    const unspent = budgeted - itemSum;\n\n    if (unspent > 0) {\n      pieArr.push(unspent)\n      labelArr.push('Remaining in Budget')\n      backgroundColor.push('#748386');\n    }\n\n    const pieData = {\n      labels: labelArr,\n      datasets: [{\n        data: pieArr,\n        borderColor: '#748386',\n        backgroundColor,\n        borderWidth: 1,\n        fill: false\n      }]\n    }\n\n    const options = {\n      title: {\n        display: true,\n        padding: 20,\n        fontSize: 22,\n        text: `${category.charAt(0).toUpperCase() + category.slice(1)} Spending for ${catMonth}${year}`\n      },\n      legend: {\n        display: false,\n        labels: {\n          boxWidth: 0,\n        }\n      },\n      tooltips: {\n        enabled: true,\n        mode: 'single',\n        displayColors: false,\n        backgroundColor: '#FAFFFD',\n        titleFontFamily: \"'Lora', serif\",\n        titleFontSize: 16,\n        titleFontColor: '#252323',\n        titleMarginBottom: 10,\n        bodyFontFamily: \"'Lora', serif\",\n        bodyFontSize: 12,\n        bodyFontColor: '#252323',\n        bodySpacing: 10,\n        callbacks: {\n          title: function(tooltipItem) { \n            return this._data.labels[tooltipItem[0].index];\n          },\n          label: function(tooltipItems, data) {\n            const percent = ((Number(data.datasets[tooltipItems.datasetIndex].data[tooltipItems.index]) / queriedSum) * 100).toFixed(2);\n            const cost = `$${(data.datasets[tooltipItems.datasetIndex].data[tooltipItems.index]).toFixed(2)}`;\n            const percentStatement = `${percent}% of total spending`;\n            const tooltip = new Array(cost, percentStatement);\n            return tooltip;\n          },\n        }\n      },\n      hover: {\n        onHover: function(e) {\n          ctx.style.cursor = e[0] ? \"pointer\" : \"default\";\n        }\n      }\n    }\n\n    let categoryChart = new Chart(ctx, {\n      type: 'pie',\n      data: pieData,\n      options\n    });\n  })\n}\n\n","function loadAllItems(year = moment().startOf('year').format('YYYY')) {\naxios.get(`/api/categories/items?year=${year}`)\n  .then(res => {\n    const data = res.data;\n    const labels = Object.keys(data['sumByMonth'][year]);\n    const values = Object.values(data['sumByMonth'][year]);\n    const budgeted = (data['sumByMonth']['totalBudget']).toFixed(2);\n    const ctx = document.getElementById(\"dashboardChart\");\n    const label = `Total Monthly Budget: $${budgeted}`;\n\n    const backgroundColor = [];\n\n    values.map((value) => {\n      if (value <= budgeted) {\n        backgroundColor.push('#17B890');\n      } else {\n        backgroundColor.push('#DB504A')\n      }\n    });\n\n    const barData = {\n      labels,\n      datasets: [{\n        label,\n        data: values,\n        backgroundColor,\n        borderColor: backgroundColor,\n        borderWidth: 1,\n        fill: false\n      }]\n    }\n\n    const lineData = {\n      labels,\n      datasets: [{\n        label,\n        data: values,\n        borderColor: '#748386',\n        pointBackgroundColor: backgroundColor,\n        pointBorderColor: backgroundColor,\n        borderWidth: 2,\n        fill: false\n      }]\n    }\n\n    const options = {\n      responsive: true,\n      title: {\n        display: true,\n        fontSize: 18,\n        text: `Spending for ${year}`\n      },\n      legend: {\n        labels: {\n          boxWidth: 0,\n        }\n      },\n      scales: {\n        xAxes: [{\n          ticks: {\n            callback: function(tick) {\n              return moment(tick, 'MM').format('MMM');\n            }\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            callback: function(value, index, values) {\n                return '$' + value;\n            }\n          }\n        }]\n      },\n      tooltips: {\n          enabled: true,\n          mode: 'single',\n          displayColors: false,\n          backgroundColor: '#FAFFFD',\n          titleFontFamily: \"'Lora', serif\",\n          titleFontSize: 16,\n          titleFontColor: '#252323',\n          titleMarginBottom: 8,\n          bodyFontFamily: \"'Lora', serif\",\n          bodyFontSize: 12,\n          bodyFontColor: '#252323',\n          bodySpacing: 10,\n          callbacks: {\n              title: function(tooltipItem) { \n                return moment(this._data.labels[tooltipItem[0].index], 'MM').format('MMMM');\n              },\n              label: function(tooltipItems, data) { \n                return `$${(tooltipItems.yLabel.toFixed(2))}`;\n              }\n          }\n      },\n      hover: {\n        onHover: function(e) {\n          ctx.style.cursor = e[0] ? \"pointer\" : \"default\";\n        }\n      }\n    }\n\n    let categoryChart = new Chart(ctx, {\n      type: 'bar',\n      data: barData,\n      options\n    });\n\n    const chartBtns = [...document.querySelectorAll('button.chartBtn')];\n    let chartBtnVal = 'bar';\n    if (chartBtns) {\n      for (const chartBtn of chartBtns) {\n        chartBtn.addEventListener('click', function(e) {\n          e.preventDefault();\n          chartBtnVal = this.value;\n          categoryChart.destroy();\n          if (chartBtnVal === 'line') {\n            categoryChart = new Chart(ctx, {\n              type: 'line',\n              data: lineData,\n              options\n            });\n          } else {\n            categoryChart = new Chart(ctx, {\n              type: 'bar',\n              data: barData,\n              options\n            });\n          }\n        });\n      }\n    }\n\n    ctx.onclick = function(evt){\n      const activePoints = categoryChart.getElementsAtEvent(evt);\n      const firstPoint = activePoints[0];\n      const label = categoryChart.data.labels[firstPoint._index];\n      const value = categoryChart.data.datasets[firstPoint._datasetIndex].data[firstPoint._index];\n      if (firstPoint !== undefined)\n        window.location.href = `${window.location.href.split('?')[0]}?month=${label}&year=${year}`\n    };\n  })\n}\n\n","/*jslint browser:true */\n\n(function () {\n  'use strict';\n\n  function updateQueryStringParameter(uri, key, value) {\n    var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n    var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\n    if (uri.match(re)) {\n      return uri.replace(re, '$1' + key + \"=\" + value + '$2');\n    }\n    else {\n      return uri + separator + key + \"=\" + value;\n    }\n  }\n\n  const dashboardCategoryFilter = document.querySelector('select[name=category-type-filter]');\n  if (dashboardCategoryFilter) {\n    dashboardCategoryFilter.addEventListener('change', function(e) {\n      const sort = 'sort';\n      const value = this.value;\n      window.location.href = updateQueryStringParameter(window.location.href, sort, value);\n    });\n  }\n  \n  // Mobile Menu Toggle Functionality\n  const mobileMenuIcon = document.querySelector('.mobile-menu-toggle');\n\n  const mobileMenuToggle = function () {\n    mobileMenuIcon.addEventListener('click', function (e) {\n      e.preventDefault();\n      document.querySelector('body').classList.toggle('menu-open');\n    });\n  };\n\n  mobileMenuToggle();\n\n  // Add class to form input if input has value\n\n  const formInputs = [...document.querySelectorAll('input:not([type=submit]):not([type=date]), select, textarea')];\n  if (formInputs) {\n    for (const formInput of formInputs) {\n      if (formInput.value) {\n        formInput.classList.add('has-value');\n      }\n      \n      formInput.addEventListener('change', function(e) {\n        if (formInput.value) {\n          this.classList.add('has-value');\n        } else {\n          this.classList.remove('has-value');\n        }\n      })\n    }\n  }\n\n  // Add validation to email input as you type\n\n  function validateEmail(email) {\n    const emailValidation = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return emailValidation.test(email);\n  }\n\n  const emailInputs = [...document.querySelectorAll('input[type=email]')];\n  for (const emailInput of emailInputs) {\n    emailInput.addEventListener('keydown', function(e) {\n      if (validateEmail(this.value)) {\n        this.classList.remove('invalid-input');\n      } else {\n        this.classList.add('invalid-input');\n      }\n    });\n  }\n\n  // Add validation to password and confirm password fields as you type\n\n  const passwordInput = document.querySelector('input[name=password]');\n  const confirmPasswordInput = document.querySelector('input[name=confirm-password]');\n\n  if (passwordInput && confirmPasswordInput) {\n    confirmPasswordInput.addEventListener('keyup', function(e) {\n      if (this.value !== passwordInput.value) {\n        this.classList.add('invalid-input');\n      } else {\n        this.classList.remove('invalid-input');\n        this.classList.add('passwords-match');\n        passwordInput.classList.add('passwords-match');\n      }\n    });\n  }\n\n  // Add class to parent container when amount field is in focus\n  const amountInput = document.querySelector('.amount-field input');\n\n  function addAmountInputClass() {\n    this.parentElement.classList.add('active-element');\n  }\n\n  function removeAmountInputClass() {\n    if (this.value) {\n      return;\n    }\n    \n    this.parentElement.classList.remove('active-element');\n  }\n\n  if (amountInput) {\n    if (amountInput.classList.contains('has-value')) {\n      amountInput.parentElement.classList.add('active-element');\n    }\n    amountInput.addEventListener('focus', addAmountInputClass, true);\n    amountInput.addEventListener('blur', addAmountInputClass, true);\n    amountInput.addEventListener('focusout', removeAmountInputClass, true)\n  }\n\n  // Change color of budget spent number depending on if it exceeds or is lower than budget goal number\n\n  function changeBudgetColor() {\n    const budgetDetails = [...document.querySelectorAll('.budget-meta')];\n\n    if (budgetDetails) {\n      budgetDetails.forEach(detail => {\n        const parent = detail.parentElement.parentElement;\n        const budgetSpentElement = detail.querySelector('.budget-spent');\n        if (budgetSpentElement) {\n          const budgetSpent = Number(budgetSpentElement.textContent.replace(/[^0-9\\.-]+/g, \"\"));\n          const budgetGoal = Number(detail.querySelector('.budget-goal').textContent.replace(/[^0-9\\.-]+/g, \"\"));\n          const budgetClass = budgetSpent > budgetGoal ? 'overspend' : 'underspend';\n          budgetSpentElement.classList.add(budgetClass);\n          parent.classList.add(budgetClass);\n        }\n      });\n    }\n  }\n  \n  changeBudgetColor();\n\n  // Fade out flash after 5 seconds\n  function fade(element) {\n      let op = 1;  // initial opacity\n      const timer = setTimeout(function() {\n        setInterval(function () {\n          if (op <= 0.3){\n              clearInterval(timer);\n              element.style.display = 'none';\n          }\n          element.style.opacity = op;\n          element.style.filter = 'alpha(opacity=' + op * 100 + \")\";\n          op -= op * 0.1;\n      }, 300)\n    }, 3000);\n  }\n\n  const flashes = document.querySelectorAll('.flash');\n  for (const flash of flashes) {\n    fade(flash);\n  }\n\n}());\n"]}